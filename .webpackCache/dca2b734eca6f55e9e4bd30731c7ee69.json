{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/bannerController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/bannerController.ts","mtime":1611246636994},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCBob21lID0gYXN5bmMgY3R4ID0+IHsKICBjdHguc3RhdHVzID0gMjAwOwogIGN0eC5ib2R5ID0gJ3NkZnNkZnNkZnNkZnNkZic7Cn07Cgpjb25zdCBjcmVhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIHRpdGxlLAogICAgY2F0ZWdvcnksCiAgICBsaW5rCiAgfSA9IGN0eC5yZXF1ZXN0LmJvZHk7CiAgY29uc3QgaXRlbSA9IGF3YWl0IGRiLmJhbm5lcnMuY3JlYXRlKHsKICAgIHRpdGxlLAogICAgY2F0ZWdvcnksCiAgICBsaW5rCiAgfSk7CiAgY29uc3QgcGFyYW0gPSB7CiAgICBCdWNrZXQ6ICdyaWRhc3Byb2QnLAogICAgS2V5OiBgYmFubmVycy8ke2l0ZW0uX2lkICsgTWF0aC5yYW5kb20oKX1gLAogICAgQUNMOiAncHVibGljLXJlYWQnLAogICAgQm9keTogYXdhaXQgZnMuY3JlYXRlUmVhZFN0cmVhbShjdHgucmVxdWVzdC5maWxlcy5waWMucGF0aCksCiAgICBDb250ZW50VHlwZTogJ2ltYWdlL3BuZycKICB9OwogIGNvbnNvbGUubG9nKGN0eC5yZXF1ZXN0LmZpbGVzLnBpYy5wYXRoKTsKICBjb25zdCBsYWxhID0gYXdhaXQgdXBsb2FkKHBhcmFtKTsKICBpdGVtLnBpYyA9IGxhbGEuTG9jYXRpb247CiAgaXRlbS5zYXZlKCk7CiAgY29uc29sZS5sb2coaXRlbSk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IGRlbGV0ZW9uZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgaWQgPSBjdHgucGFyYW1zLmlkOwogIGNvbnN0IGRlbCA9IGF3YWl0IGRiLmJhbm5lcnMuZmluZE9uZUFuZERlbGV0ZSh7CiAgICBfaWQ6IGlkCiAgfSk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBob21lLAogIGNyZWF0ZSwKICBkZWxldGVvbmUKfTs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/bannerController.ts"],"names":["db","upload","fs","home","ctx","status","body","create","title","category","link","request","item","banners","param","Bucket","Key","_id","Math","random","ACL","Body","createReadStream","files","pic","path","ContentType","console","log","lala","Location","save","deleteone","id","params","del","findOneAndDelete"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,IAAgB,GAAG,MAAOC,GAAP,IAAe;AACtCA,EAAAA,GAAG,CAACC,MAAJ,GAAa,GAAb;AACAD,EAAAA,GAAG,CAACE,IAAJ,GAAW,iBAAX;AACD,CAHD;;AAKA,MAAMC,MAAkB,GAAG,MAAOH,GAAP,IAAe;AACxC,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA4BN,GAAG,CAACO,OAAJ,CAAYL,IAA9C;AACA,QAAMM,IAAI,GAAG,MAAMZ,EAAE,CAACa,OAAH,CAAWN,MAAX,CAAkB;AACnCC,IAAAA,KADmC;AAEnCC,IAAAA,QAFmC;AAGnCC,IAAAA;AAHmC,GAAlB,CAAnB;AAKA,QAAMI,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE,WADI;AAEZC,IAAAA,GAAG,EAAG,WAAUJ,IAAI,CAACK,GAAL,GAAWC,IAAI,CAACC,MAAL,EAAc,EAF7B;AAGZC,IAAAA,GAAG,EAAE,aAHO;AAIZC,IAAAA,IAAI,EAAE,MAAMnB,EAAE,CAACoB,gBAAH,CAAoBlB,GAAG,CAACO,OAAJ,CAAYY,KAAZ,CAAkBC,GAAlB,CAAsBC,IAA1C,CAJA;AAKZC,IAAAA,WAAW,EAAE;AALD,GAAd;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAG,CAACO,OAAJ,CAAYY,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAlC;AACA,QAAMI,IAAI,GAAG,MAAM5B,MAAM,CAACa,KAAD,CAAzB;AACCF,EAAAA,IAAD,CAAcY,GAAd,GAAoBK,IAAI,CAACC,QAAzB;AACAlB,EAAAA,IAAI,CAACmB,IAAL;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACAR,EAAAA,GAAG,CAACC,MAAJ,GAAa,GAAb;AACD,CApBD;;AAsBA,MAAM2B,SAAqB,GAAG,MAAO5B,GAAP,IAAe;AAC3C,QAAM6B,EAAE,GAAG7B,GAAG,CAAC8B,MAAJ,CAAWD,EAAtB;AACA,QAAME,GAAG,GAAG,MAAMnC,EAAE,CAACa,OAAH,CAAWuB,gBAAX,CAA4B;AAC5CnB,IAAAA,GAAG,EAAEgB;AADuC,GAA5B,CAAlB;AAGA7B,EAAAA,GAAG,CAACC,MAAJ,GAAa,GAAb;AACD,CAND;;AAQA,eAAe;AAAEF,EAAAA,IAAF;AAAQI,EAAAA,MAAR;AAAgByB,EAAAA;AAAhB,CAAf","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst home: Controller = async (ctx) => {\n  ctx.status = 200;\n  ctx.body = 'sdfsdfsdfsdfsdf';\n};\n\nconst create: Controller = async (ctx) => {\n  const { title, category, link } = ctx.request.body;\n  const item = await db.banners.create({\n    title,\n    category,\n    link,\n  });\n  const param = {\n    Bucket: 'ridasprod',\n    Key: `banners/${item._id + Math.random()}`,\n    ACL: 'public-read',\n    Body: await fs.createReadStream(ctx.request.files.pic.path),\n    ContentType: 'image/png',\n  };\n  console.log(ctx.request.files.pic.path);\n  const lala = await upload(param);\n  (item as any).pic = lala.Location;\n  item.save();\n  console.log(item);\n  ctx.status = 200;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const id = ctx.params.id;\n  const del = await db.banners.findOneAndDelete({\n    _id: id,\n  });\n  ctx.status = 200;\n};\n\nexport default { home, create, deleteone };\n"]}]}