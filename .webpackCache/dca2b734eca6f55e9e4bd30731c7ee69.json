{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/bannerController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/bannerController.ts","mtime":1611674628926},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCBob21lID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCBhbGxiYW5uZXIgPSBhd2FpdCBkYi5iYW5uZXJzLmZpbmQoKTsKICBjdHguYm9keSA9IGFsbGJhbm5lcjsKfTsKCmNvbnN0IGdldGJhbm5lciA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgYWxsYmFubmVyID0gYXdhaXQgZGIuYmFubmVycy5maW5kKCk7CiAgY3R4LmJvZHkgPSBhbGxiYW5uZXI7Cn07Cgpjb25zdCBjcmVhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIHRpdGxlLAogICAgY2F0ZWdvcnksCiAgICBsaW5rCiAgfSA9IGN0eC5yZXF1ZXN0LmJvZHk7CiAgY29uc3QgaXRlbSA9IGF3YWl0IGRiLmJhbm5lcnMuY3JlYXRlKHsKICAgIHRpdGxlLAogICAgY2F0ZWdvcnksCiAgICBsaW5rCiAgfSk7CiAgY29uc3QgcGFyYW0gPSB7CiAgICBCdWNrZXQ6ICdyaWRhc3Byb2QnLAogICAgS2V5OiBgYmFubmVycy8ke2l0ZW0uX2lkICsgTWF0aC5yYW5kb20oKX1gLAogICAgQUNMOiAncHVibGljLXJlYWQnLAogICAgQm9keTogYXdhaXQgZnMuY3JlYXRlUmVhZFN0cmVhbShjdHgucmVxdWVzdC5maWxlcy5waWMucGF0aCksCiAgICBDb250ZW50VHlwZTogJ2ltYWdlL3BuZycKICB9OwogIGNvbnN0IGxhbGEgPSBhd2FpdCB1cGxvYWQocGFyYW0pOwogIGl0ZW0ucGljID0gbGFsYS5Mb2NhdGlvbjsKICBpdGVtLnNhdmUoKTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKY29uc3QgZGVsZXRlb25lID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCBpZCA9IGN0eC5wYXJhbXMuaWQ7CiAgY29uc3QgZGVsID0gYXdhaXQgZGIuYmFubmVycy5maW5kT25lQW5kRGVsZXRlKHsKICAgIF9pZDogaWQKICB9KTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKZXhwb3J0IGRlZmF1bHQgewogIGhvbWUsCiAgY3JlYXRlLAogIGRlbGV0ZW9uZSwKICBnZXRiYW5uZXIKfTs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/bannerController.ts"],"names":["db","upload","fs","home","ctx","allbanner","banners","find","body","getbanner","create","title","category","link","request","item","param","Bucket","Key","_id","Math","random","ACL","Body","createReadStream","files","pic","path","ContentType","lala","Location","save","status","deleteone","id","params","del","findOneAndDelete"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,IAAgB,GAAG,MAAOC,GAAP,IAAe;AACtC,QAAMC,SAAS,GAAG,MAAML,EAAE,CAACM,OAAH,CAAWC,IAAX,EAAxB;AACAH,EAAAA,GAAG,CAACI,IAAJ,GAAWH,SAAX;AACD,CAHD;;AAKA,MAAMI,SAAqB,GAAG,MAAOL,GAAP,IAAe;AAC3C,QAAMC,SAAS,GAAG,MAAML,EAAE,CAACM,OAAH,CAAWC,IAAX,EAAxB;AACAH,EAAAA,GAAG,CAACI,IAAJ,GAAWH,SAAX;AACD,CAHD;;AAKA,MAAMK,MAAkB,GAAG,MAAON,GAAP,IAAe;AACxC,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA4BT,GAAG,CAACU,OAAJ,CAAYN,IAA9C;AACA,QAAMO,IAAI,GAAG,MAAMf,EAAE,CAACM,OAAH,CAAWI,MAAX,CAAkB;AACnCC,IAAAA,KADmC;AAEnCC,IAAAA,QAFmC;AAGnCC,IAAAA;AAHmC,GAAlB,CAAnB;AAKA,QAAMG,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE,WADI;AAEZC,IAAAA,GAAG,EAAG,WAAUH,IAAI,CAACI,GAAL,GAAWC,IAAI,CAACC,MAAL,EAAc,EAF7B;AAGZC,IAAAA,GAAG,EAAE,aAHO;AAIZC,IAAAA,IAAI,EAAE,MAAMrB,EAAE,CAACsB,gBAAH,CAAoBpB,GAAG,CAACU,OAAJ,CAAYW,KAAZ,CAAkBC,GAAlB,CAAsBC,IAA1C,CAJA;AAKZC,IAAAA,WAAW,EAAE;AALD,GAAd;AAOA,QAAMC,IAAI,GAAG,MAAM5B,MAAM,CAACe,KAAD,CAAzB;AACCD,EAAAA,IAAD,CAAcW,GAAd,GAAoBG,IAAI,CAACC,QAAzB;AACAf,EAAAA,IAAI,CAACgB,IAAL;AACA3B,EAAAA,GAAG,CAAC4B,MAAJ,GAAa,GAAb;AACD,CAlBD;;AAoBA,MAAMC,SAAqB,GAAG,MAAO7B,GAAP,IAAe;AAC3C,QAAM8B,EAAE,GAAG9B,GAAG,CAAC+B,MAAJ,CAAWD,EAAtB;AACA,QAAME,GAAG,GAAG,MAAMpC,EAAE,CAACM,OAAH,CAAW+B,gBAAX,CAA4B;AAC5ClB,IAAAA,GAAG,EAAEe;AADuC,GAA5B,CAAlB;AAGA9B,EAAAA,GAAG,CAAC4B,MAAJ,GAAa,GAAb;AACD,CAND;;AAQA,eAAe;AAAE7B,EAAAA,IAAF;AAAQO,EAAAA,MAAR;AAAgBuB,EAAAA,SAAhB;AAA2BxB,EAAAA;AAA3B,CAAf","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst home: Controller = async (ctx) => {\n  const allbanner = await db.banners.find();\n  ctx.body = allbanner;\n};\n\nconst getbanner: Controller = async (ctx) => {\n  const allbanner = await db.banners.find();\n  ctx.body = allbanner;\n};\n\nconst create: Controller = async (ctx) => {\n  const { title, category, link } = ctx.request.body;\n  const item = await db.banners.create({\n    title,\n    category,\n    link,\n  });\n  const param = {\n    Bucket: 'ridasprod',\n    Key: `banners/${item._id + Math.random()}`,\n    ACL: 'public-read',\n    Body: await fs.createReadStream(ctx.request.files.pic.path),\n    ContentType: 'image/png',\n  };\n  const lala = await upload(param);\n  (item as any).pic = lala.Location;\n  item.save();\n  ctx.status = 200;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const id = ctx.params.id;\n  const del = await db.banners.findOneAndDelete({\n    _id: id,\n  });\n  ctx.status = 200;\n};\n\nexport default { home, create, deleteone, getbanner };\n"]}]}