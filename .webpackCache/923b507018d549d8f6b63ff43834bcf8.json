{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","mtime":1611248398366},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCB2aWV3Q291bnQgPSBhc3luYyBpZCA9PiB7CiAgY29uc3Qgdmlld1VwID0gYXdhaXQgZGIucG9zdHMuZmluZEJ5SWRBbmRVcGRhdGUoewogICAgX2lkOiBpZAogIH0sIHsKICAgICRpbmM6IHsKICAgICAgdmlld3M6ICsxCiAgICB9CiAgfSk7CiAgYXdhaXQgdmlld1VwPy5zYXZlKCk7Cn07Cgpjb25zdCBjcmVhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIHRhZ3MsCiAgICBsb2NhdGlvbgogIH0gPSBjdHgucmVxdWVzdC5ib2R5OwogIGNvbnN0IGF1dGhvciA9IGN0eC5zdGF0ZS51c2VyLl9pZDsKICBjb25zdCBuZXd0YWcgPSBKU09OLnBhcnNlKHRhZ3MpOwogIGNvbnN0IGl0ZW0gPSBhd2FpdCBkYi5wb3N0cy5jcmVhdGUoewogICAgdGl0bGUsCiAgICBjb250ZXh0LAogICAgYXV0aG9yLAogICAgdGFnczogbmV3dGFnLAogICAgbG9jYXRpb24KICB9KTsKICB2YXIgYXJyID0gW107CiAgdmFyIGFyciA9IFtjdHgucmVxdWVzdC5maWxlcy5waWMucGF0aCwgY3R4LnJlcXVlc3QuZmlsZXMucGljMi5wYXRoXTsKCiAgZm9yICh2YXIgdmFsIG9mIGFycikgewogICAgdmFyIHBhcmFtID0gewogICAgICBCdWNrZXQ6ICdyaWRhc3Byb2QnLAogICAgICBLZXk6IGBwb3N0aW1hZ2UvJHtpdGVtLl9pZCArIE1hdGgucmFuZG9tKCl9YCwKICAgICAgQUNMOiAncHVibGljLXJlYWQnLAogICAgICBCb2R5OiBhd2FpdCBmcy5jcmVhdGVSZWFkU3RyZWFtKHZhbCksCiAgICAgIENvbnRlbnRUeXBlOiAnaW1hZ2UvcG5nJwogICAgfTsKICAgIGNvbnN0IGxhbGEgPSBhd2FpdCB1cGxvYWQocGFyYW0pOwogICAgYXdhaXQgaXRlbS5waWNzLnB1c2gobGFsYS5Mb2NhdGlvbik7CiAgfQoKICBpdGVtLnNhdmUoKTsKICBjb25zb2xlLmxvZygnaXRlbScsIGl0ZW0pOwogIGN0eC5zdGF0dXMgPSAyMDA7Cn07Cgpjb25zdCB1cGRhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgewogICAgY29udGV4dCwKICAgIHRpdGxlLAogICAgdGFncywKICAgIGlzam9iLAogICAgbG9jYXRpb24KICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjb25zdCBuZXd0YWcgPSBKU09OLnBhcnNlKHRhZ3MpOwogIGNvbnN0IGF1dGhvciA9IGN0eC5zdGF0ZS51c2VyLl9pZDsKICBjb25zdCBwb3N0ID0gYXdhaXQgZGIucG9zdHMuZmluZE9uZUFuZFVwZGF0ZSh7CiAgICBfaWQ6IGlkCiAgfSwgewogICAgY29udGV4dDogY29udGV4dCwKICAgIHRhZ3M6IG5ld3RhZywKICAgIHRpdGxlOiB0aXRsZSwKICAgIGxvY2F0aW9uOiBsb2NhdGlvbgogIH0pOwogIHBvc3Quc2F2ZSgpOwogIGN0eC5zdGF0dXMgPSAyMDA7Cn07Cgpjb25zdCBmaW5kb25lID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBpZAogIH0gPSBjdHgucGFyYW1zOwogIGNvbnN0IHBvc3QgPSBhd2FpdCBkYi5wb3N0cy5maW5kT25lKHsKICAgIF9pZDogaWQKICB9KTsKICB2aWV3Q291bnQoaWQpOwogIGN0eC5zdGF0dXMgPSAyMDA7CiAgY3R4LmJvZHkgPSBwb3N0Owp9OwoKY29uc3QgbGF0ZXN0ID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCBwb3N0cyA9IGF3YWl0IGRiLnBvc3RzLmZpbmQoKS5zb3J0KHsKICAgIF9pZDogLTEKICB9KS5saW1pdCgyMCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKICBjdHguYm9keSA9IHBvc3RzOwp9OwoKY29uc3QgZGVsZXRlb25lID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBpZAogIH0gPSBjdHgucGFyYW1zOwogIGNvbnN0IHBvc3QgPSBhd2FpdCBkYi5wb3N0cy5maW5kT25lQW5kUmVtb3ZlKHsKICAgIF9pZDogaWQKICB9KTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKZXhwb3J0IGRlZmF1bHQgewogIGNyZWF0ZSwKICBkZWxldGVvbmUsCiAgdXBkYXRlLAogIGZpbmRvbmUsCiAgbGF0ZXN0Cn07"},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts"],"names":["db","upload","fs","viewCount","id","viewUp","posts","findByIdAndUpdate","_id","$inc","views","save","create","ctx","title","context","tags","location","request","body","author","state","user","newtag","JSON","parse","item","arr","files","pic","path","pic2","val","param","Bucket","Key","Math","random","ACL","Body","createReadStream","ContentType","lala","pics","push","Location","console","log","status","update","params","isjob","post","findOneAndUpdate","findone","findOne","latest","find","sort","limit","deleteone","findOneAndRemove"],"mappings":"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","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst viewCount: Controller = async (id) => {\n  const viewUp = await db.posts.findByIdAndUpdate(\n    { _id: id },\n    { $inc: { views: +1 } }\n  );\n  await viewUp?.save();\n};\n\nconst create: Controller = async (ctx) => {\n  const { title, context, tags, location } = ctx.request.body;\n  const author = ctx.state.user._id;\n  const newtag = JSON.parse(tags);\n  const item = await db.posts.create({\n    title,\n    context,\n    author,\n    tags: newtag,\n    location,\n  });\n  var arr = [];\n\n  var arr = [ctx.request.files.pic.path, ctx.request.files.pic2.path];\n  for (var val of arr) {\n    var param = {\n      Bucket: 'ridasprod',\n      Key: `postimage/${item._id + Math.random()}`,\n      ACL: 'public-read',\n      Body: await fs.createReadStream(val),\n      ContentType: 'image/png',\n    };\n    const lala = await upload(param);\n    await (item as any).pics.push(lala.Location);\n  }\n\n  item.save();\n  console.log('item', item);\n  ctx.status = 200;\n};\n\nconst update: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const { context, title, tags, isjob, location } = ctx.request.body;\n  const newtag = JSON.parse(tags);\n  const author = ctx.state.user._id;\n  const post = await db.posts.findOneAndUpdate(\n    { _id: id },\n    {\n      context: context,\n      tags: newtag,\n      title: title,\n      location: location,\n    }\n  );\n  (post as any).save();\n  ctx.status = 200;\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.posts.findOne({ _id: id });\n  viewCount(id);\n  ctx.status = 200;\n  ctx.body = post;\n};\n\nconst latest: Controller = async (ctx) => {\n  const posts = await db.posts.find().sort({ _id: -1 }).limit(20);\n  ctx.status = 200;\n  ctx.body = posts;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.posts.findOneAndRemove({ _id: id });\n  ctx.status = 200;\n};\n\nexport default { create, deleteone, update, findone, latest };\n"]}]}