{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","mtime":1611435498579},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCBjcmVhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIHRhZ3MsCiAgICBsb2NhdGlvbgogIH0gPSBjdHgucmVxdWVzdC5ib2R5OwogIGNvbnN0IGF1dGhvciA9IGN0eC5zdGF0ZS51c2VyLl9pZDsKICBjb25zdCB1c2VyID0gYXdhaXQgZGIudXNlcnMuZmluZE9uZUFuZFVwZGF0ZSh7CiAgICBfaWQ6IGF1dGhvcgogIH0sIHsKICAgICRpbmM6IHsKICAgICAgZXhwOiArMTAKICAgIH0KICB9KTsKICB1c2VyPy5zYXZlKCk7CiAgY29uc3QgbmV3dGFnID0gSlNPTi5wYXJzZSh0YWdzKTsKICBjb25zdCBpdGVtID0gYXdhaXQgZGIucG9zdHMuY3JlYXRlKHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIGF1dGhvciwKICAgIHRhZ3M6IG5ld3RhZywKICAgIGxvY2F0aW9uCiAgfSk7CiAgY3R4LnJlcXVlc3QuZmlsZXMucGljLmZvckVhY2goYXN5bmMgKHsKICAgIHBhdGgKICB9LCBpKSA9PiB7CiAgICB2YXIgcGFyYW0gPSB7CiAgICAgIEJ1Y2tldDogJ3JpZGFzcHJvZCcsCiAgICAgIEtleTogYHBvc3RpbWFnZS8ke2l0ZW0uX2lkICsgaX1gLAogICAgICBBQ0w6ICdwdWJsaWMtcmVhZCcsCiAgICAgIEJvZHk6IGF3YWl0IGZzLmNyZWF0ZVJlYWRTdHJlYW0ocGF0aCksCiAgICAgIENvbnRlbnRUeXBlOiAnaW1hZ2UvcG5nJwogICAgfTsKICAgIGNvbnN0IGxhbGEgPSBhd2FpdCB1cGxvYWQocGFyYW0pOwogICAgYXdhaXQgaXRlbS5waWNzLnB1c2gobGFsYS5Mb2NhdGlvbik7CiAgICBpdGVtLnNhdmUoKTsKICB9KTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKY29uc3QgdXBkYXRlID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBpZAogIH0gPSBjdHgucGFyYW1zOwogIGNvbnN0IHsKICAgIGNvbnRleHQsCiAgICB0aXRsZSwKICAgIHRhZ3MsCiAgICBsb2NhdGlvbgogIH0gPSBjdHgucmVxdWVzdC5ib2R5OwogIGNvbnN0IG5ld3RhZyA9IEpTT04ucGFyc2UodGFncyk7CiAgY29uc3QgYXV0aG9yID0gY3R4LnN0YXRlLnVzZXIuX2lkOwogIGNvbnN0IHBvc3QgPSBhd2FpdCBkYi5wb3N0cy5maW5kT25lQW5kVXBkYXRlKHsKICAgIF9pZDogaWQKICB9LCB7CiAgICBjb250ZXh0OiBjb250ZXh0LAogICAgdGFnczogbmV3dGFnLAogICAgdGl0bGU6IHRpdGxlLAogICAgbG9jYXRpb246IGxvY2F0aW9uCiAgfSk7CiAgcG9zdC5zYXZlKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IGZpbmRvbmUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgcG9zdCA9IGF3YWl0IGRiLnBvc3RzLmZpbmRPbmUoewogICAgX2lkOiBpZAogIH0pLnBvcHVsYXRlKCdhdXRob3InKS5wb3B1bGF0ZSgnY29tbWVudHMnKTsKICBwb3N0Py52aWV3VXAoKTsKICBjdHguc3RhdHVzID0gMjAwOwogIGN0eC5ib2R5ID0gcG9zdDsKfTsKCmNvbnN0IGxhdGVzdCA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgcG9zdHMgPSBhd2FpdCBkYi5wb3N0cy5maW5kKCkucG9wdWxhdGUoJ2NvbW1lbnRzJykuc29ydCh7CiAgICBfaWQ6IC0xCiAgfSkubGltaXQoMjApOwogIGN0eC5zdGF0dXMgPSAyMDA7CiAgY3R4LmJvZHkgPSBwb3N0czsKfTsKCmNvbnN0IGRlbGV0ZW9uZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCBwb3N0ID0gYXdhaXQgZGIucG9zdHMuZmluZE9uZUFuZFJlbW92ZSh7CiAgICBfaWQ6IGlkCiAgfSk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGUsCiAgZGVsZXRlb25lLAogIHVwZGF0ZSwKICBmaW5kb25lLAogIGxhdGVzdAp9Ow=="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts"],"names":["db","upload","fs","create","ctx","title","context","tags","location","request","body","author","state","user","_id","users","findOneAndUpdate","$inc","exp","save","newtag","JSON","parse","item","posts","files","pic","forEach","path","i","param","Bucket","Key","ACL","Body","createReadStream","ContentType","lala","pics","push","Location","status","update","id","params","post","findone","findOne","populate","viewUp","latest","find","sort","limit","deleteone","findOneAndRemove"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,MAAkB,GAAG,MAAOC,GAAP,IAAe;AACxC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAqCJ,GAAG,CAACK,OAAJ,CAAYC,IAAvD;AACA,QAAMC,MAAM,GAAGP,GAAG,CAACQ,KAAJ,CAAUC,IAAV,CAAeC,GAA9B;AACA,QAAMD,IAAI,GAAG,MAAMb,EAAE,CAACe,KAAH,CAASC,gBAAT,CACjB;AAAEF,IAAAA,GAAG,EAAEH;AAAP,GADiB,EAEjB;AAAEM,IAAAA,IAAI,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAC;AAAR;AAAR,GAFiB,CAAnB;AAIAL,EAAAA,IAAI,EAAEM,IAAN;AACA,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWf,IAAX,CAAf;AACA,QAAMgB,IAAI,GAAG,MAAMvB,EAAE,CAACwB,KAAH,CAASrB,MAAT,CAAgB;AACjCE,IAAAA,KADiC;AAEjCC,IAAAA,OAFiC;AAGjCK,IAAAA,MAHiC;AAIjCJ,IAAAA,IAAI,EAAEa,MAJ2B;AAKjCZ,IAAAA;AALiC,GAAhB,CAAnB;AAQAJ,EAAAA,GAAG,CAACK,OAAJ,CAAYgB,KAAZ,CAAkBC,GAAlB,CAAsBC,OAAtB,CACE,OAAO;AAAEC,IAAAA;AAAF,GAAP,EAAmCC,CAAnC,KAAiD;AAC/C,QAAIC,KAAK,GAAG;AACVC,MAAAA,MAAM,EAAE,WADE;AAEVC,MAAAA,GAAG,EAAG,aAAYT,IAAI,CAACT,GAAL,GAAWe,CAAE,EAFrB;AAGVI,MAAAA,GAAG,EAAE,aAHK;AAIVC,MAAAA,IAAI,EAAE,MAAMhC,EAAE,CAACiC,gBAAH,CAAoBP,IAApB,CAJF;AAKVQ,MAAAA,WAAW,EAAE;AALH,KAAZ;AAOA,UAAMC,IAAI,GAAG,MAAMpC,MAAM,CAAC6B,KAAD,CAAzB;AACA,UAAOP,IAAD,CAAce,IAAd,CAAmBC,IAAnB,CAAwBF,IAAI,CAACG,QAA7B,CAAN;AACAjB,IAAAA,IAAI,CAACJ,IAAL;AACD,GAZH;AAeAf,EAAAA,GAAG,CAACqC,MAAJ,GAAa,GAAb;AACD,CAjCD;;AAmCA,MAAMC,MAAkB,GAAG,MAAOtC,GAAP,IAAe;AACxC,QAAM;AAAEuC,IAAAA;AAAF,MAASvC,GAAG,CAACwC,MAAnB;AACA,QAAM;AAAEtC,IAAAA,OAAF;AAAWD,IAAAA,KAAX;AAAkBE,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAqCJ,GAAG,CAACK,OAAJ,CAAYC,IAAvD;AACA,QAAMU,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWf,IAAX,CAAf;AACA,QAAMI,MAAM,GAAGP,GAAG,CAACQ,KAAJ,CAAUC,IAAV,CAAeC,GAA9B;AACA,QAAM+B,IAAI,GAAG,MAAM7C,EAAE,CAACwB,KAAH,CAASR,gBAAT,CACjB;AAAEF,IAAAA,GAAG,EAAE6B;AAAP,GADiB,EAEjB;AACErC,IAAAA,OAAO,EAAEA,OADX;AAEEC,IAAAA,IAAI,EAAEa,MAFR;AAGEf,IAAAA,KAAK,EAAEA,KAHT;AAIEG,IAAAA,QAAQ,EAAEA;AAJZ,GAFiB,CAAnB;AASCqC,EAAAA,IAAD,CAAc1B,IAAd;AACAf,EAAAA,GAAG,CAACqC,MAAJ,GAAa,GAAb;AACD,CAhBD;;AAkBA,MAAMK,OAAmB,GAAG,MAAO1C,GAAP,IAAe;AACzC,QAAM;AAAEuC,IAAAA;AAAF,MAASvC,GAAG,CAACwC,MAAnB;AACA,QAAMC,IAAI,GAAG,MAAM7C,EAAE,CAACwB,KAAH,CAChBuB,OADgB,CACR;AAAEjC,IAAAA,GAAG,EAAE6B;AAAP,GADQ,EAEhBK,QAFgB,CAEP,QAFO,EAGhBA,QAHgB,CAGP,UAHO,CAAnB;AAIAH,EAAAA,IAAI,EAAEI,MAAN;AACA7C,EAAAA,GAAG,CAACqC,MAAJ,GAAa,GAAb;AACArC,EAAAA,GAAG,CAACM,IAAJ,GAAWmC,IAAX;AACD,CATD;;AAWA,MAAMK,MAAkB,GAAG,MAAO9C,GAAP,IAAe;AACxC,QAAMoB,KAAK,GAAG,MAAMxB,EAAE,CAACwB,KAAH,CACjB2B,IADiB,GAEjBH,QAFiB,CAER,UAFQ,EAGjBI,IAHiB,CAGZ;AAAEtC,IAAAA,GAAG,EAAE,CAAC;AAAR,GAHY,EAIjBuC,KAJiB,CAIX,EAJW,CAApB;AAKAjD,EAAAA,GAAG,CAACqC,MAAJ,GAAa,GAAb;AACArC,EAAAA,GAAG,CAACM,IAAJ,GAAWc,KAAX;AACD,CARD;;AAUA,MAAM8B,SAAqB,GAAG,MAAOlD,GAAP,IAAe;AAC3C,QAAM;AAAEuC,IAAAA;AAAF,MAASvC,GAAG,CAACwC,MAAnB;AACA,QAAMC,IAAI,GAAG,MAAM7C,EAAE,CAACwB,KAAH,CAAS+B,gBAAT,CAA0B;AAAEzC,IAAAA,GAAG,EAAE6B;AAAP,GAA1B,CAAnB;AACAvC,EAAAA,GAAG,CAACqC,MAAJ,GAAa,GAAb;AACD,CAJD;;AAMA,eAAe;AAAEtC,EAAAA,MAAF;AAAUmD,EAAAA,SAAV;AAAqBZ,EAAAA,MAArB;AAA6BI,EAAAA,OAA7B;AAAsCI,EAAAA;AAAtC,CAAf","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst create: Controller = async (ctx) => {\n  const { title, context, tags, location } = ctx.request.body;\n  const author = ctx.state.user._id;\n  const user = await db.users.findOneAndUpdate(\n    { _id: author },\n    { $inc: { exp: +10 } }\n  );\n  user?.save();\n  const newtag = JSON.parse(tags);\n  const item = await db.posts.create({\n    title,\n    context,\n    author,\n    tags: newtag,\n    location,\n  });\n\n  ctx.request.files.pic.forEach(\n    async ({ path }: { path: string }, i: number) => {\n      var param = {\n        Bucket: 'ridasprod',\n        Key: `postimage/${item._id + i}`,\n        ACL: 'public-read',\n        Body: await fs.createReadStream(path),\n        ContentType: 'image/png',\n      };\n      const lala = await upload(param);\n      await (item as any).pics.push(lala.Location);\n      item.save();\n    }\n  );\n\n  ctx.status = 200;\n};\n\nconst update: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const { context, title, tags, location } = ctx.request.body;\n  const newtag = JSON.parse(tags);\n  const author = ctx.state.user._id;\n  const post = await db.posts.findOneAndUpdate(\n    { _id: id },\n    {\n      context: context,\n      tags: newtag,\n      title: title,\n      location: location,\n    }\n  );\n  (post as any).save();\n  ctx.status = 200;\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.posts\n    .findOne({ _id: id })\n    .populate('author')\n    .populate('comments');\n  post?.viewUp();\n  ctx.status = 200;\n  ctx.body = post;\n};\n\nconst latest: Controller = async (ctx) => {\n  const posts = await db.posts\n    .find()\n    .populate('comments')\n    .sort({ _id: -1 })\n    .limit(20);\n  ctx.status = 200;\n  ctx.body = posts;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.posts.findOneAndRemove({ _id: id });\n  ctx.status = 200;\n};\n\nexport default { create, deleteone, update, findone, latest };\n"]}]}