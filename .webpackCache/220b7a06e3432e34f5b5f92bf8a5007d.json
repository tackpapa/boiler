{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/marketController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/marketController.ts","mtime":1611243847095},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCB2aWV3Q291bnQgPSBhc3luYyBpZCA9PiB7CiAgY29uc3Qgdmlld1VwID0gYXdhaXQgZGIubWFya2V0cy5maW5kQnlJZEFuZFVwZGF0ZSh7CiAgICBfaWQ6IGlkCiAgfSwgewogICAgJGluYzogewogICAgICB2aWV3czogKzEKICAgIH0KICB9KTsKICBhd2FpdCB2aWV3VXA/LnNhdmUoKTsKfTsKCmNvbnN0IGNyZWF0ZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgdGl0bGUsCiAgICBjb250ZXh0LAogICAgdGFncywKICAgIHByaWNlCiAgfSA9IGN0eC5yZXF1ZXN0LmJvZHk7CiAgY29uc29sZS5sb2coY3R4LnJlcXVlc3QuYm9keSk7CiAgY29uc3QgYXV0aG9yID0gY3R4LnN0YXRlLnVzZXIuX2lkOwogIGNvbnN0IG5ld3RhZyA9IEpTT04ucGFyc2UodGFncyk7CiAgY29uc3QgaXRlbSA9IGF3YWl0IGRiLm1hcmtldHMuY3JlYXRlKHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIGF1dGhvciwKICAgIHRhZ3M6IG5ld3RhZywKICAgIHByaWNlCiAgfSk7CiAgdmFyIGFyciA9IFtdOwogIHZhciBhcnIgPSBbY3R4LnJlcXVlc3QuZmlsZXMucGljLnBhdGgsIGN0eC5yZXF1ZXN0LmZpbGVzLnBpYzIucGF0aF07CgogIGZvciAodmFyIHZhbCBvZiBhcnIpIHsKICAgIHZhciBwYXJhbSA9IHsKICAgICAgQnVja2V0OiAncmlkYXNwcm9kJywKICAgICAgS2V5OiBgbWFya2V0aW1hZ2UvJHtpdGVtLl9pZCArIE1hdGgucmFuZG9tKCl9YCwKICAgICAgQUNMOiAncHVibGljLXJlYWQnLAogICAgICBCb2R5OiBhd2FpdCBmcy5jcmVhdGVSZWFkU3RyZWFtKHZhbCksCiAgICAgIENvbnRlbnRUeXBlOiAnaW1hZ2UvcG5nJwogICAgfTsKICAgIGNvbnN0IGxhbGEgPSBhd2FpdCB1cGxvYWQocGFyYW0pOwogICAgYXdhaXQgaXRlbS5waWNzLnB1c2gobGFsYS5Mb2NhdGlvbik7CiAgfQoKICBpdGVtLnNhdmUoKTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKY29uc3QgdXBkYXRlID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBpZAogIH0gPSBjdHgucGFyYW1zOwogIGNvbnN0IHsKICAgIGNvbnRleHQsCiAgICB0aXRsZSwKICAgIHRhZ3MsCiAgICBwcmljZQogIH0gPSBjdHgucmVxdWVzdC5ib2R5OwogIGNvbnN0IG5ld3RhZyA9IEpTT04ucGFyc2UodGFncyk7CiAgY29uc3QgYXV0aG9yID0gY3R4LnN0YXRlLnVzZXIuX2lkOwogIGNvbnN0IHBvc3QgPSBhd2FpdCBkYi5tYXJrZXRzLmZpbmRPbmVBbmRVcGRhdGUoewogICAgX2lkOiBpZAogIH0sIHsKICAgIGNvbnRleHQ6IGNvbnRleHQsCiAgICB0YWdzOiBuZXd0YWcsCiAgICB0aXRsZTogdGl0bGUsCiAgICBwcmljZTogcHJpY2UKICB9KTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKY29uc3QgZmluZG9uZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCBwb3N0ID0gYXdhaXQgZGIubWFya2V0cy5maW5kT25lKHsKICAgIF9pZDogaWQKICB9KTsKICB2aWV3Q291bnQoaWQpOwogIGN0eC5zdGF0dXMgPSAyMDA7CiAgY3R4LmJvZHkgPSBwb3N0Owp9OwoKY29uc3QgbGF0ZXN0ID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCBwb3N0cyA9IGF3YWl0IGRiLm1hcmtldHMuZmluZCgpLnNvcnQoewogICAgX2lkOiAtMQogIH0pLmxpbWl0KDIwKTsKICBjdHguc3RhdHVzID0gMjAwOwogIGN0eC5ib2R5ID0gcG9zdHM7Cn07Cgpjb25zdCBkZWxldGVvbmUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgcG9zdCA9IGF3YWl0IGRiLm1hcmtldHMuZmluZE9uZUFuZFJlbW92ZSh7CiAgICBfaWQ6IGlkCiAgfSk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGUsCiAgZGVsZXRlb25lLAogIHVwZGF0ZSwKICBmaW5kb25lLAogIGxhdGVzdAp9Ow=="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/marketController.ts"],"names":["db","upload","fs","viewCount","id","viewUp","markets","findByIdAndUpdate","_id","$inc","views","save","create","ctx","title","context","tags","price","request","body","console","log","author","state","user","newtag","JSON","parse","item","arr","files","pic","path","pic2","val","param","Bucket","Key","Math","random","ACL","Body","createReadStream","ContentType","lala","pics","push","Location","status","update","params","post","findOneAndUpdate","findone","findOne","latest","posts","find","sort","limit","deleteone","findOneAndRemove"],"mappings":"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","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst viewCount: Controller = async (id) => {\n  const viewUp = await db.markets.findByIdAndUpdate(\n    { _id: id },\n    { $inc: { views: +1 } }\n  );\n  await viewUp?.save();\n};\n\nconst create: Controller = async (ctx) => {\n  const { title, context, tags, price } = ctx.request.body;\n  console.log(ctx.request.body);\n  const author = ctx.state.user._id;\n  const newtag = JSON.parse(tags);\n  const item = await db.markets.create({\n    title,\n    context,\n    author,\n    tags: newtag,\n    price,\n  });\n  var arr = [];\n\n  var arr = [ctx.request.files.pic.path, ctx.request.files.pic2.path];\n  for (var val of arr) {\n    var param = {\n      Bucket: 'ridasprod',\n      Key: `marketimage/${item._id + Math.random()}`,\n      ACL: 'public-read',\n      Body: await fs.createReadStream(val),\n      ContentType: 'image/png',\n    };\n    const lala = await upload(param);\n    await (item as any).pics.push(lala.Location);\n  }\n  item.save();\n  ctx.status = 200;\n};\n\nconst update: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const { context, title, tags, price } = ctx.request.body;\n  const newtag = JSON.parse(tags);\n  const author = ctx.state.user._id;\n  const post = await db.markets.findOneAndUpdate(\n    { _id: id },\n    { context: context, tags: newtag, title: title, price: price }\n  );\n  ctx.status = 200;\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.markets.findOne({ _id: id });\n  viewCount(id);\n  ctx.status = 200;\n  ctx.body = post;\n};\n\nconst latest: Controller = async (ctx) => {\n  const posts = await db.markets.find().sort({ _id: -1 }).limit(20);\n  ctx.status = 200;\n  ctx.body = posts;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.markets.findOneAndRemove({ _id: id });\n  ctx.status = 200;\n};\n\nexport default { create, deleteone, update, findone, latest };\n"]}]}