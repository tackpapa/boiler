{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/models/posts.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/models/posts.ts","mtime":1611316737689},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJzsKY29uc3QgUG9zdFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoewogIHRpdGxlOiBTdHJpbmcsCiAgYXV0aG9yOiB7CiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsCiAgICByZWY6ICdVc2VycycKICB9LAogIGNvbnRleHQ6IFN0cmluZywKICBwaWNzOiB7CiAgICB0eXBlOiBbU3RyaW5nXSwKICAgIGRlZmF1bHQ6IFtdCiAgfSwKICB0YWdzOiB7CiAgICB0eXBlOiBbU3RyaW5nXSwKICAgIGRlZmF1bHQ6IFtdCiAgfSwKICB2aWV3czogTnVtYmVyCn0sIHsKICB0aW1lc3RhbXBzOiB0cnVlCn0pOwoKUG9zdFNjaGVtYS5tZXRob2RzLnZpZXdVcCA9IGFzeW5jIGZ1bmN0aW9uICgpIHsKICB0aGlzLnZpZXdzICs9IDE7CiAgdGhpcy5zYXZlKCk7Cn07Cgpjb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdQb3N0cycsIFBvc3RTY2hlbWEpOwpleHBvcnQgZGVmYXVsdCBtb2RlbDs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/models/posts.ts"],"names":["mongoose","PostSchema","Schema","title","String","author","type","Types","ObjectId","ref","context","pics","default","tags","views","Number","timestamps","methods","viewUp","save","model"],"mappings":"AAAA,OAAOA,QAAP,MAAkD,UAAlD;AAkBA,MAAMC,UAAgC,GAAG,IAAID,QAAQ,CAACE,MAAb,CACvC;AACEC,EAAAA,KAAK,EAAEC,MADT;AAEEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAEN,QAAQ,CAACE,MAAT,CAAgBK,KAAhB,CAAsBC,QADtB;AAENC,IAAAA,GAAG,EAAE;AAFC,GAFV;AAMEC,EAAAA,OAAO,EAAEN,MANX;AAOEO,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAE,CAACF,MAAD,CADF;AAEJQ,IAAAA,OAAO,EAAE;AAFL,GAPR;AAWEC,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAE,CAACF,MAAD,CADF;AAEJQ,IAAAA,OAAO,EAAE;AAFL,GAXR;AAeEE,EAAAA,KAAK,EAAEC;AAfT,CADuC,EAkBvC;AACEC,EAAAA,UAAU,EAAE;AADd,CAlBuC,CAAzC;;AAuBAf,UAAU,CAACgB,OAAX,CAAmBC,MAAnB,GAA4B,kBAAkB;AAC5C,OAAKJ,KAAL,IAAc,CAAd;AACA,OAAKK,IAAL;AACD,CAHD;;AAKA,MAAMC,KAAK,GAAGpB,QAAQ,CAACoB,KAAT,CAAwC,OAAxC,EAAiDnB,UAAjD,CAAd;AAEA,eAAemB,KAAf","sourcesContent":["import mongoose, { Schema, Model, Document } from 'mongoose';\n\nexport interface Post {\n  title: string;\n  author: string;\n  context: string;\n  pics: string[];\n  tags: string[];\n  views: number;\n}\n\nexport interface PostDocument extends Post, Document {\n  //method를 넣는다\n  viewUp: () => void;\n}\n\nexport interface PostModel extends Model<PostDocument> {}\n\nconst PostSchema: Schema<PostDocument> = new mongoose.Schema(\n  {\n    title: String,\n    author: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Users',\n    },\n    context: String,\n    pics: {\n      type: [String],\n      default: [],\n    },\n    tags: {\n      type: [String],\n      default: [],\n    },\n    views: Number,\n  },\n  {\n    timestamps: true,\n  }\n);\n\nPostSchema.methods.viewUp = async function () {\n  this.views += 1;\n  this.save();\n};\n\nconst model = mongoose.model<PostDocument, PostModel>('Posts', PostSchema);\n\nexport default model;\n"]}]}