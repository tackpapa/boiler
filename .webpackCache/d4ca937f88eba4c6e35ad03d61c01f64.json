{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/socket.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/socket.ts","mtime":1611319747951},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHNvY2tldGlvIGZyb20gJ3NvY2tldC5pbyc7CmV4cG9ydCBsZXQgaW87Cgpjb25zdCBpbml0ID0gc2VydmVyID0+IHsKICBpbyA9IHNvY2tldGlvKHNlcnZlcik7CiAgaW8ub24oJ2Nvbm5lY3Rpb24nLCBzb2NrZXQgPT4gewogICAgY29uc29sZS5sb2coJ2Nvbm5lY3RlZCcsICdzb2NrZXQnKTsKICAgIHNvY2tldC5vbigndGVzdCcsIGRkID0+IHsKICAgICAgY29uc29sZS5sb2coZGQpOwogICAgICBzb2NrZXQuZW1pdCgndGVzdCcsIHsKICAgICAgICBuYW1lOiAnZGRkZCcsCiAgICAgICAgdGl0bGU6ICdkZGRkZGQnCiAgICAgIH0pOwogICAgfSk7CiAgICBzb2NrZXQub24oJ2Rpc2Nvbm5lY3QnLCAoKSA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCdkaXNjb25uZWN0ZWQnLCBzb2NrZXQpOwogICAgfSk7CiAgfSk7Cn07CgpleHBvcnQgZGVmYXVsdCBpbml0Ow=="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/socket.ts"],"names":["socketio","io","init","server","on","socket","console","log","dd","emit","name","title"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AAGA,OAAO,IAAIC,EAAJ;;AAEP,MAAMC,IAAI,GAAIC,MAAD,IAAoB;AAC/BF,EAAAA,EAAE,GAAGD,QAAQ,CAACG,MAAD,CAAb;AAEAF,EAAAA,EAAE,CAACG,EAAH,CAAM,YAAN,EAAqBC,MAAD,IAAY;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,QAAzB;AAEAF,IAAAA,MAAM,CAACD,EAAP,CAAU,MAAV,EAAmBI,EAAD,IAAQ;AACxBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACAH,MAAAA,MAAM,CAACI,IAAP,CAAY,MAAZ,EAAoB;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAApB;AACD,KAHD;AAIAN,IAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAA5B;AACD,KAFD;AAGD,GAVD;AAWD,CAdD;;AAgBA,eAAeH,IAAf","sourcesContent":["import socketio from 'socket.io';\nimport { Server } from 'http';\n\nexport let io: ReturnType<typeof socketio>;\n\nconst init = (server: Server) => {\n  io = socketio(server);\n\n  io.on('connection', (socket) => {\n    console.log('connected', 'socket');\n\n    socket.on('test', (dd) => {\n      console.log(dd);\n      socket.emit('test', { name: 'dddd', title: 'dddddd' });\n    });\n    socket.on('disconnect', () => {\n      console.log('disconnected', socket);\n    });\n  });\n};\n\nexport default init;\n"]}]}