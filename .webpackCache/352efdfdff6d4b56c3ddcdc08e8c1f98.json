{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/models/users.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/models/users.ts","mtime":1611412085885},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJzsKY29uc3QgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoewogIGVtYWlsOiB7CiAgICB0eXBlOiBTdHJpbmcsCiAgICBsb3dlcmNhc2U6IHRydWUsCiAgICB1bmlxdWU6IHRydWUsCiAgICByZXF1aXJlZDogW3RydWUsICJjYW4ndCBiZSBibGFuayJdLAogICAgaW5kZXg6IHRydWUKICB9LAogIG5hbWU6IHsKICAgIHR5cGU6IFN0cmluZywKICAgIHJlcXVpcmVkOiBbdHJ1ZSwgImNhbid0IGJlIGJsYW5rIl0KICB9LAogIGV4cDogTnVtYmVyLAogIHBhc3N3b3JkOiBTdHJpbmcsCiAgY2VsbDogTnVtYmVyLAogIGtha2FvaWQ6IFN0cmluZywKICBhY2Nlc3NUb2tlbjogU3RyaW5nLAogIHByb2ZpbGVwaWM6IFN0cmluZywKICBsZXZlbDogewogICAgdHlwZTogTnVtYmVyLAogICAgZGVmYXVsdDogMQogIH0KfSwgewogIHRpbWVzdGFtcHM6IHRydWUKfSk7CmNvbnN0IG1vZGVsID0gbW9uZ29vc2UubW9kZWwoJ1VzZXJzJywgVXNlclNjaGVtYSk7CmV4cG9ydCBkZWZhdWx0IG1vZGVsOw=="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/models/users.ts"],"names":["mongoose","UserSchema","Schema","email","type","String","lowercase","unique","required","index","name","exp","Number","password","cell","kakaoid","accessToken","profilepic","level","default","timestamps","model"],"mappings":"AAAA,OAAOA,QAAP,MAAiC,UAAjC;AAGA,MAAMC,UAAkB,GAAG,IAAID,QAAQ,CAACE,MAAb,CACzB;AACEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,SAAS,EAAE,IAFN;AAGLC,IAAAA,MAAM,EAAE,IAHH;AAILC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gBAAP,CAJL;AAKLC,IAAAA,KAAK,EAAE;AALF,GADT;AAQEC,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAEC,MADF;AAEJG,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gBAAP;AAFN,GARR;AAYEG,EAAAA,GAAG,EAAEC,MAZP;AAaEC,EAAAA,QAAQ,EAAER,MAbZ;AAcES,EAAAA,IAAI,EAAEF,MAdR;AAeEG,EAAAA,OAAO,EAAEV,MAfX;AAgBEW,EAAAA,WAAW,EAAEX,MAhBf;AAiBEY,EAAAA,UAAU,EAAEZ,MAjBd;AAkBEa,EAAAA,KAAK,EAAE;AACLd,IAAAA,IAAI,EAAEQ,MADD;AAELO,IAAAA,OAAO,EAAE;AAFJ;AAlBT,CADyB,EAwBzB;AACEC,EAAAA,UAAU,EAAE;AADd,CAxByB,CAA3B;AA6BA,MAAMC,KAAK,GAAGrB,QAAQ,CAACqB,KAAT,CAAe,OAAf,EAAwBpB,UAAxB,CAAd;AAEA,eAAeoB,KAAf","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nimport { createTextChangeRange } from 'typescript';\n\nconst UserSchema: Schema = new mongoose.Schema(\n  {\n    email: {\n      type: String,\n      lowercase: true,\n      unique: true,\n      required: [true, \"can't be blank\"],\n      index: true,\n    },\n    name: {\n      type: String,\n      required: [true, \"can't be blank\"],\n    },\n    exp: Number,\n    password: String,\n    cell: Number,\n    kakaoid: String,\n    accessToken: String,\n    profilepic: String,\n    level: {\n      type: Number,\n      default: 1,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst model = mongoose.model('Users', UserSchema);\n\nexport default model;\n"]}]}