{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/userController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/userController.ts","mtime":1610972226922},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKCmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpOwoKaW1wb3J0IHsgSm9pIH0gZnJvbSAna29hLWpvaS1yb3V0ZXInOwppbXBvcnQgZ2VuZXJhdGVUb2tlbiBmcm9tICd1dGlscy9qd3QnOwppbXBvcnQgdXBsb2FkIGZyb20gJy4uL3V0aWxzL3MzJzsKaW1wb3J0IGZzIGZyb20gJ2ZzJzsKCmNvbnN0IGhhc2ggPSBfcGFzc3dvcmQgPT4gewogIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2JywgcHJvY2Vzcy5lbnYuU0VDUkVUX0tFWSkudXBkYXRlKF9wYXNzd29yZCkuZGlnZXN0KCdoZXgnKTsKfTsKCmNvbnN0IHZhbGlkYXRlUGFzc3dvcmQgPSBmdW5jdGlvbiAocGFzc3dvcmQpIHsKICBjb25zdCBoYXNoZWQgPSBoYXNoKHBhc3N3b3JkKTsKICByZXR1cm4gaGFzaGVkOwp9OwoKY29uc3QgY3JlYXRlID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBlbWFpbCwKICAgIHBhc3N3b3JkLAogICAgbmFtZSwKICAgIGNlbGwKICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICB2YXIgcGF0dGVybiA9IC9cUytAXFMrXC5cUysvOwogIGNvbnN0IGVtYWlsVmFsID0gcGF0dGVybi50ZXN0KGVtYWlsKTsKCiAgaWYgKGVtYWlsVmFsID09PSBmYWxzZSkgewogICAgY3R4LnN0YXR1cyA9IDQwMDsKICAgIHJldHVybjsKICB9CgogIGNvbnN0IGhhc2hlZCA9IGhhc2gocGFzc3dvcmQpOwogIGNvbnN0IG1hbiA9IGF3YWl0IGRiLnVzZXJzLmZpbmRPbmUoewogICAgZW1haWwKICB9KTsKCiAgaWYgKG1hbikgewogICAgY3R4LnN0YXR1cyA9IDQwMzsKICB9IGVsc2UgewogICAgYXdhaXQgZGIudXNlcnMuY3JlYXRlKHsKICAgICAgZW1haWwsCiAgICAgIHBhc3N3b3JkOiBoYXNoZWQsCiAgICAgIG5hbWUsCiAgICAgIGNlbGwKICAgIH0pOwogICAgY3R4LnN0YXR1cyA9IDIwMDsKICAgIGNvbnN0IHVzZXIxID0gYXdhaXQgZGIudXNlcnMuZmluZE9uZSh7CiAgICAgIGVtYWlsCiAgICB9KTsKICAgIGN0eC5ib2R5ID0gdXNlcjE7CiAgfQp9OwoKY29uc3QgbG9naW4gPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGVtYWlsLAogICAgcGFzc3dvcmQKICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjb25zdCBoYXNoZWQgPSBoYXNoKHBhc3N3b3JkKTsKICBjb25zdCBzY2hlbWEgPSBKb2kub2JqZWN0KCkua2V5cyh7CiAgICBlbWFpbDogSm9pLnN0cmluZygpLmVtYWlsKCkucmVxdWlyZWQoKSwKICAgIHBhc3N3b3JkOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKQogIH0pOwogIHNjaGVtYS52YWxpZGF0ZUFzeW5jKHsKICAgIGVtYWlsLAogICAgcGFzc3dvcmQKICB9KS50aGVuKHJlc3VsdCA9PiB7CiAgICBjdHgucmVxdWVzdC5ib2R5ID0gcmVzdWx0OwogIH0pLmNhdGNoKGVyciA9PiB7CiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byB2YWxpZGF0ZSBpbnB1dCAnICsgZXJyLmRldGFpbHNbMF0ubWVzc2FnZSk7CiAgfSk7CiAgbGV0IHVzZXIgPSBudWxsOwoKICB0cnkgewogICAgdXNlciA9IGF3YWl0IGRiLnVzZXJzLmZpbmRPbmUoewogICAgICBlbWFpbAogICAgfSk7CiAgfSBjYXRjaCAoZSkgewogICAgY3R4LnRocm93KDUwMCwgZSk7CiAgfQoKICBpZiAoIXVzZXIgfHwgdXNlci5wYXNzd29yZCAhPT0gYCR7aGFzaGVkfWApIHsKICAgIC8vIOycoOyggOqwgCDsobTsnqztlZjsp4Ag7JWK6rGw64KYIHx8IOu5hOuwgOuyiO2YuOqwgCDsnbzsuZjtlZjsp4Ag7JWK7Jy866m0CiAgICBjdHguc3RhdHVzID0gNDAzOyAvLyBGb3JiaWRkZW4KCiAgICByZXR1cm47CiAgfQoKICBjdHguc3RhdHVzID0gMjAwOwogIGNvbnN0IHRva2VuID0gYXdhaXQgZ2VuZXJhdGVUb2tlbih7CiAgICBfaWQ6IHVzZXIuaWQsCiAgICBlbWFpbDogdXNlci5lbWFpbAogIH0pOwogIGN0eC5ib2R5ID0gdG9rZW47CiAgcmV0dXJuOwp9OwoKY29uc3QgdXBkYXRlID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBlbWFpbCwKICAgIHBhc3N3b3JkLAogICAgbmFtZSwKICAgIGNlbGwKICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjb25zdCBoYXNoZWQgPSBoYXNoKHBhc3N3b3JkKTsKICBhd2FpdCBkYi51c2Vycy5maW5kT25lQW5kVXBkYXRlKHsKICAgIGVtYWlsCiAgfSwgewogICAgcGFzc3dvcmQ6IGhhc2hlZCwKICAgIG5hbWUsCiAgICBjZWxsCiAgfSk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IGRlbGV0ZW9uZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgZW1haWwKICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBhd2FpdCBsb2dpbihjdHgpOwoKICBpZiAoY3R4LnN0YXR1cyA9PT0gMjAwKSB7CiAgICBkYi51c2Vycy5kZWxldGVPbmUoewogICAgICBlbWFpbAogICAgfSk7CiAgICBjb25zb2xlLmxvZyhlbWFpbCwgJyB1c2VyIGRlbGV0ZWQnKTsKICB9IGVsc2UgewogICAgY29uc29sZS5sb2coJ3VzZXIgYWxyZWFkeSBnb25lJyk7CiAgfQp9OwoKY29uc3QgZmluZG9uZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCB1c2VyID0gYXdhaXQgZGIudXNlcnMuZmluZE9uZSh7CiAgICBfaWQ6IGlkCiAgfSk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKICBjdHguYm9keSA9IHVzZXI7Cn07Cgpjb25zdCB1cGxvYWRQcm9maWxlID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB1c2VyID0gYXdhaXQgZGIudXNlcnMuZmluZE9uZSh7CiAgICBfaWQ6IGN0eC5zdGF0ZS51c2VyLl9pZAogIH0pOwogIGNvbnN0IHsKICAgIHBhdGgKICB9ID0gY3R4LnJlcXVlc3QuZmlsZXMucHJvZmlsZXBpYzsKICBjb25zdCBib2R5ID0gZnMuY3JlYXRlUmVhZFN0cmVhbShwYXRoKTsKICBjb25zdCBwYXJhbSA9IHsKICAgIEJ1Y2tldDogcHJvY2Vzcy5lbnYucGp0X25hbWUsCiAgICBLZXk6IGBpbWFnZS8ke3VzZXIuX2lkfWAsCiAgICBBQ0w6ICdwdWJsaWMtcmVhZCcsCiAgICBCb2R5OiBib2R5LAogICAgQ29udGVudFR5cGU6ICdpbWFnZS9wbmcnCiAgfTsKICBjb25zdCB1cCA9IGF3YWl0IHVwbG9hZChwYXJhbSk7CiAgdXNlci5wcm9maWxlcGljID0gdXAuTG9jYXRpb247CiAgdXNlci5zYXZlKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IGxvZ291dCA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgZW1haWwsCiAgICBwYXNzd29yZAogIH0gPSBjdHgucmVxdWVzdC5ib2R5Owp9OwoKZXhwb3J0IGRlZmF1bHQgewogIGNyZWF0ZSwKICBsb2dpbiwKICB1cGRhdGUsCiAgZGVsZXRlb25lLAogIGZpbmRvbmUsCiAgbG9nb3V0LAogIHVwbG9hZFByb2ZpbGUKfTs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/userController.ts"],"names":["db","crypto","require","Joi","generateToken","upload","fs","hash","_password","createHash","process","env","SECRET_KEY","update","digest","validatePassword","password","hashed","create","ctx","email","name","cell","request","body","pattern","emailVal","test","status","man","users","findOne","user1","login","schema","object","keys","string","required","validateAsync","then","result","catch","err","Error","details","message","user","e","throw","token","_id","id","findOneAndUpdate","deleteone","deleteOne","console","log","findone","params","uploadProfile","state","path","files","profilepic","createReadStream","param","Bucket","pjt_name","Key","ACL","Body","ContentType","up","Location","save","logout"],"mappings":"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","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nconst crypto = require('crypto');\nimport { Joi } from 'koa-joi-router';\nimport generateToken from 'utils/jwt';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst hash: Controller = (_password: any) => {\n  return crypto\n    .createHash('sha256', process.env.SECRET_KEY)\n    .update(_password)\n    .digest('hex');\n};\n\nconst validatePassword = function (password: any) {\n  const hashed = hash(password);\n  return hashed;\n};\n\nconst create: Controller = async (ctx) => {\n  const { email, password, name, cell } = ctx.request.body;\n  var pattern = /\\S+@\\S+\\.\\S+/;\n  const emailVal = pattern.test(email);\n  if (emailVal === false) {\n    ctx.status = 400;\n    return;\n  }\n  const hashed = hash(password);\n  const man = await db.users.findOne({ email });\n  if (man) {\n    ctx.status = 403;\n  } else {\n    await db.users.create({\n      email,\n      password: hashed,\n      name,\n      cell,\n    });\n    ctx.status = 200;\n    const user1 = await db.users.findOne({\n      email,\n    });\n    ctx.body = user1;\n  }\n};\n\nconst login: Controller = async (ctx) => {\n  const { email, password } = ctx.request.body;\n  const hashed = hash(password);\n  const schema = Joi.object().keys({\n    email: Joi.string().email().required(),\n    password: Joi.string().required(),\n  });\n  schema\n    .validateAsync({ email, password })\n    .then((result) => {\n      ctx.request.body = result;\n    })\n    .catch((err) => {\n      throw new Error('Failed to validate input ' + err.details[0].message);\n    });\n  let user: any = null;\n  try {\n    user = await db.users.findOne({ email });\n  } catch (e) {\n    ctx.throw(500, e);\n  }\n  if (!user || user.password !== `${hashed}`) {\n    // 유저가 존재하지 않거나 || 비밀번호가 일치하지 않으면\n    ctx.status = 403; // Forbidden\n    return;\n  }\n  ctx.status = 200;\n  const token = await generateToken({ _id: user.id, email: user.email });\n  ctx.body = token;\n  return;\n};\n\nconst update: Controller = async (ctx) => {\n  const { email, password, name, cell } = ctx.request.body;\n  const hashed = hash(password);\n  await db.users.findOneAndUpdate({ email }, { password: hashed, name, cell });\n  ctx.status = 200;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { email } = ctx.request.body;\n  await login(ctx);\n  if (ctx.status === 200) {\n    db.users.deleteOne({ email });\n    console.log(email, ' user deleted');\n  } else {\n    console.log('user already gone');\n  }\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const user = await db.users.findOne({ _id: id });\n  ctx.status = 200;\n  ctx.body = user;\n};\n\nconst uploadProfile: Controller = async (ctx) => {\n  const user: any = await db.users.findOne({ _id: ctx.state.user._id });\n  const { path } = ctx.request.files.profilepic;\n  const body = fs.createReadStream(path);\n  const param = {\n    Bucket: process.env.pjt_name,\n    Key: `image/${user._id}`,\n    ACL: 'public-read',\n    Body: body,\n    ContentType: 'image/png',\n  };\n  const up = await upload(param);\n  (user as any).profilepic = up.Location;\n  user.save();\n  ctx.status = 200;\n};\n\nconst logout: Controller = async (ctx) => {\n  const { email, password } = ctx.request.body;\n};\n\nexport default {\n  create,\n  login,\n  update,\n  deleteone,\n  findone,\n  logout,\n  uploadProfile,\n};\n"]}]}