{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/marketController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/marketController.ts","mtime":1611224966774},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCB2aWV3Q291bnQgPSBhc3luYyBpZCA9PiB7CiAgY29uc3Qgdmlld1VwID0gYXdhaXQgZGIubWFya2V0cy5maW5kQnlJZEFuZFVwZGF0ZSh7CiAgICBfaWQ6IGlkCiAgfSwgewogICAgJGluYzogewogICAgICB2aWV3czogKzEKICAgIH0KICB9KTsKICBhd2FpdCB2aWV3VXA/LnNhdmUoKTsKfTsKCmNvbnN0IGNyZWF0ZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgdGl0bGUsCiAgICBjb250ZXh0LAogICAgdGFncywKICAgIHByaWNlCiAgfSA9IGN0eC5yZXF1ZXN0LmJvZHk7CiAgY29uc3QgYXV0aG9yID0gY3R4LnN0YXRlLnVzZXIuX2lkOwogIGNvbnN0IG5ld3RhZyA9IEpTT04ucGFyc2UodGFncyk7CiAgY29uc3QgaXRlbSA9IGF3YWl0IGRiLm1hcmtldHMuY3JlYXRlKHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIGF1dGhvciwKICAgIHByaWNlLAogICAgdGFnczogbmV3dGFnCiAgfSk7CiAgY29uc3QgewogICAgcGF0aAogIH0gPSBjdHgucmVxdWVzdC5maWxlcy5waWM7CiAgY29uc3QgYm9keSA9IGZzLmNyZWF0ZVJlYWRTdHJlYW0ocGF0aCk7CiAgY29uc3QgcGFyYW0gPSB7CiAgICBCdWNrZXQ6IHByb2Nlc3MuZW52LnBqdF9uYW1lLAogICAgS2V5OiBgbWFya2V0aW1hZ2UvJHtpdGVtLl9pZH1gLAogICAgQUNMOiAncHVibGljLXJlYWQnLAogICAgQm9keTogYm9keSwKICAgIENvbnRlbnRUeXBlOiAnaW1hZ2UvcG5nJwogIH07CiAgY29uc3QgdXAgPSBhd2FpdCB1cGxvYWQocGFyYW0pOwogIGl0ZW0ucGljID0gdXAuTG9jYXRpb247CiAgaXRlbS5zYXZlKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IHVwZGF0ZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCB7CiAgICBjb250ZXh0LAogICAgdGl0bGUsCiAgICB0YWdzCiAgfSA9IGN0eC5yZXF1ZXN0LmJvZHk7CiAgY29uc3QgbmV3dGFnID0gSlNPTi5wYXJzZSh0YWdzKTsKICBjb25zdCBhdXRob3IgPSBjdHguc3RhdGUudXNlci5faWQ7CiAgY29uc3QgcG9zdCA9IGF3YWl0IGRiLm1hcmtldHMuZmluZE9uZUFuZFVwZGF0ZSh7CiAgICBfaWQ6IGlkCiAgfSwgewogICAgY29udGV4dDogY29udGV4dCwKICAgIHRhZ3M6IG5ld3RhZywKICAgIHRpdGxlOiB0aXRsZQogIH0pOwogIGN0eC5zdGF0dXMgPSAyMDA7Cn07Cgpjb25zdCBmaW5kb25lID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBpZAogIH0gPSBjdHgucGFyYW1zOwogIGNvbnN0IHBvc3QgPSBhd2FpdCBkYi5tYXJrZXRzLmZpbmRPbmUoewogICAgX2lkOiBpZAogIH0pOwogIHZpZXdDb3VudChpZCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKICBjdHguYm9keSA9IHBvc3Q7Cn07Cgpjb25zdCBsYXRlc3QgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHBvc3RzID0gYXdhaXQgZGIubWFya2V0cy5maW5kKCkuc29ydCh7CiAgICBfaWQ6IC0xCiAgfSkubGltaXQoMjApOwogIGN0eC5zdGF0dXMgPSAyMDA7CiAgY3R4LmJvZHkgPSBwb3N0czsKfTsKCmNvbnN0IGRlbGV0ZW9uZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCBwb3N0ID0gYXdhaXQgZGIubWFya2V0cy5maW5kT25lQW5kUmVtb3ZlKHsKICAgIF9pZDogaWQKICB9KTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKZXhwb3J0IGRlZmF1bHQgewogIGNyZWF0ZSwKICBkZWxldGVvbmUsCiAgdXBkYXRlLAogIGZpbmRvbmUsCiAgbGF0ZXN0Cn07"},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/marketController.ts"],"names":["db","upload","fs","viewCount","id","viewUp","markets","findByIdAndUpdate","_id","$inc","views","save","create","ctx","title","context","tags","price","request","body","author","state","user","newtag","JSON","parse","item","path","files","pic","createReadStream","param","Bucket","process","env","pjt_name","Key","ACL","Body","ContentType","up","Location","status","update","params","post","findOneAndUpdate","findone","findOne","latest","posts","find","sort","limit","deleteone","findOneAndRemove"],"mappings":"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","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst viewCount: Controller = async (id) => {\n  const viewUp = await db.markets.findByIdAndUpdate(\n    { _id: id },\n    { $inc: { views: +1 } }\n  );\n  await viewUp?.save();\n};\n\nconst create: Controller = async (ctx) => {\n  const { title, context, tags, price } = ctx.request.body;\n  const author = ctx.state.user._id;\n  const newtag = JSON.parse(tags);\n  const item = await db.markets.create({\n    title,\n    context,\n    author,\n    price,\n    tags: newtag,\n  });\n  const { path } = ctx.request.files.pic;\n  const body = fs.createReadStream(path);\n  const param = {\n    Bucket: process.env.pjt_name,\n    Key: `marketimage/${item._id}`,\n    ACL: 'public-read',\n    Body: body,\n    ContentType: 'image/png',\n  };\n  const up = await upload(param);\n  (item as any).pic = up.Location;\n  item.save();\n  ctx.status = 200;\n};\n\nconst update: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const { context, title, tags } = ctx.request.body;\n  const newtag = JSON.parse(tags);\n  const author = ctx.state.user._id;\n  const post = await db.markets.findOneAndUpdate(\n    { _id: id },\n    { context: context, tags: newtag, title: title }\n  );\n  ctx.status = 200;\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.markets.findOne({ _id: id });\n  viewCount(id);\n  ctx.status = 200;\n  ctx.body = post;\n};\n\nconst latest: Controller = async (ctx) => {\n  const posts = await db.markets.find().sort({ _id: -1 }).limit(20);\n  ctx.status = 200;\n  ctx.body = posts;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.markets.findOneAndRemove({ _id: id });\n  ctx.status = 200;\n};\n\nexport default { create, deleteone, update, findone, latest };\n"]}]}