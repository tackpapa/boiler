{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/jobController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/jobController.ts","mtime":1611320633923},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCBjcmVhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIHRhZ3MsCiAgICBsb2NhdGlvbgogIH0gPSBjdHgucmVxdWVzdC5ib2R5OwogIGNvbnN0IGF1dGhvciA9IGN0eC5zdGF0ZS51c2VyLl9pZDsKICBjb25zdCBuZXd0YWcgPSBKU09OLnBhcnNlKHRhZ3MpOwogIGNvbnN0IGl0ZW0gPSBhd2FpdCBkYi5qb2JzLmNyZWF0ZSh7CiAgICB0aXRsZSwKICAgIGNvbnRleHQsCiAgICBhdXRob3IsCiAgICB0YWdzOiBuZXd0YWcsCiAgICBsb2NhdGlvbgogIH0pOwogIHZhciBhcnIgPSBbXTsKICB2YXIgYXJyID0gW2N0eC5yZXF1ZXN0LmZpbGVzLnBpYy5wYXRoLCBjdHgucmVxdWVzdC5maWxlcy5waWMyLnBhdGhdOwoKICBmb3IgKHZhciB2YWwgb2YgYXJyKSB7CiAgICB2YXIgcGFyYW0gPSB7CiAgICAgIEJ1Y2tldDogJ3JpZGFzcHJvZCcsCiAgICAgIEtleTogYGpvYmltYWdlLyR7aXRlbS5faWQgKyBNYXRoLnJhbmRvbSgpfWAsCiAgICAgIEFDTDogJ3B1YmxpYy1yZWFkJywKICAgICAgQm9keTogYXdhaXQgZnMuY3JlYXRlUmVhZFN0cmVhbSh2YWwpLAogICAgICBDb250ZW50VHlwZTogJ2ltYWdlL3BuZycKICAgIH07CiAgICBjb25zdCBsYWxhID0gYXdhaXQgdXBsb2FkKHBhcmFtKTsKICAgIGF3YWl0IGl0ZW0ucGljcy5wdXNoKGxhbGEuTG9jYXRpb24pOwogIH0KCiAgaXRlbS5zYXZlKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IHVwZGF0ZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCB7CiAgICBjb250ZXh0LAogICAgdGl0bGUsCiAgICB0YWdzLAogICAgbG9jYXRpb24KICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjb25zdCBuZXd0YWcgPSBKU09OLnBhcnNlKHRhZ3MpOwogIGNvbnN0IGF1dGhvciA9IGN0eC5zdGF0ZS51c2VyLl9pZDsKICBjb25zdCBwb3N0ID0gYXdhaXQgZGIuam9icy5maW5kT25lQW5kVXBkYXRlKHsKICAgIF9pZDogaWQKICB9LCB7CiAgICBjb250ZXh0OiBjb250ZXh0LAogICAgdGFnczogbmV3dGFnLAogICAgdGl0bGU6IHRpdGxlLAogICAgbG9jYXRpb246IGxvY2F0aW9uCiAgfSk7CiAgcG9zdC5zYXZlKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IGZpbmRvbmUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgcG9zdCA9IGF3YWl0IGRiLmpvYnMuZmluZE9uZSh7CiAgICBfaWQ6IGlkCiAgfSk7CiAgcG9zdD8udmlld1VwKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKICBjdHguYm9keSA9IHBvc3Q7Cn07Cgpjb25zdCBsYXRlc3QgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHBvc3RzID0gYXdhaXQgZGIuam9icy5maW5kKCkuc29ydCh7CiAgICBfaWQ6IC0xCiAgfSkubGltaXQoMjApOwogIGN0eC5zdGF0dXMgPSAyMDA7CiAgY3R4LmJvZHkgPSBwb3N0czsKfTsKCmNvbnN0IGRlbGV0ZW9uZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCBwb3N0ID0gYXdhaXQgZGIuam9icy5maW5kT25lQW5kUmVtb3ZlKHsKICAgIF9pZDogaWQKICB9KTsKICBjdHguc3RhdHVzID0gMjAwOwp9OwoKZXhwb3J0IGRlZmF1bHQgewogIGNyZWF0ZSwKICBkZWxldGVvbmUsCiAgdXBkYXRlLAogIGZpbmRvbmUsCiAgbGF0ZXN0Cn07"},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/jobController.ts"],"names":["db","upload","fs","create","ctx","title","context","tags","location","request","body","author","state","user","_id","newtag","JSON","parse","item","jobs","arr","files","pic","path","pic2","val","param","Bucket","Key","Math","random","ACL","Body","createReadStream","ContentType","lala","pics","push","Location","save","status","update","id","params","post","findOneAndUpdate","findone","findOne","viewUp","latest","posts","find","sort","limit","deleteone","findOneAndRemove"],"mappings":"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","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst create: Controller = async (ctx) => {\n  const { title, context, tags, location } = ctx.request.body;\n  const author = ctx.state.user._id;\n  const newtag = JSON.parse(tags);\n  const item = await db.jobs.create({\n    title,\n    context,\n    author,\n    tags: newtag,\n    location,\n  });\n  var arr = [];\n\n  var arr = [ctx.request.files.pic.path, ctx.request.files.pic2.path];\n  for (var val of arr) {\n    var param = {\n      Bucket: 'ridasprod',\n      Key: `jobimage/${item._id + Math.random()}`,\n      ACL: 'public-read',\n      Body: await fs.createReadStream(val),\n      ContentType: 'image/png',\n    };\n    const lala = await upload(param);\n    await (item as any).pics.push(lala.Location);\n  }\n\n  item.save();\n  ctx.status = 200;\n};\n\nconst update: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const { context, title, tags, location } = ctx.request.body;\n  const newtag = JSON.parse(tags);\n  const author = ctx.state.user._id;\n  const post = await db.jobs.findOneAndUpdate(\n    { _id: id },\n    {\n      context: context,\n      tags: newtag,\n      title: title,\n      location: location,\n    }\n  );\n  (post as any).save();\n  ctx.status = 200;\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.jobs.findOne({ _id: id });\n  post?.viewUp();\n  ctx.status = 200;\n  ctx.body = post;\n};\n\nconst latest: Controller = async (ctx) => {\n  const posts = await db.jobs.find().sort({ _id: -1 }).limit(20);\n  ctx.status = 200;\n  ctx.body = posts;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.jobs.findOneAndRemove({ _id: id });\n  ctx.status = 200;\n};\n\nexport default { create, deleteone, update, findone, latest };\n"]}]}