{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/jobController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/jobController.ts","mtime":1611247633473},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCB2aWV3Q291bnQgPSBhc3luYyBpZCA9PiB7CiAgY29uc3Qgdmlld1VwID0gYXdhaXQgZGIucG9zdHMuZmluZEJ5SWRBbmRVcGRhdGUoewogICAgX2lkOiBpZAogIH0sIHsKICAgICRpbmM6IHsKICAgICAgdmlld3M6ICsxCiAgICB9CiAgfSk7CiAgYXdhaXQgdmlld1VwPy5zYXZlKCk7Cn07Cgpjb25zdCBjcmVhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIHRhZ3MsCiAgICBsb2NhdGlvbgogIH0gPSBjdHgucmVxdWVzdC5ib2R5OwogIGNvbnN0IGF1dGhvciA9IGN0eC5zdGF0ZS51c2VyLl9pZDsKICBjb25zdCBuZXd0YWcgPSBKU09OLnBhcnNlKHRhZ3MpOwogIGNvbnN0IGl0ZW0gPSBhd2FpdCBkYi5qb2JzLmNyZWF0ZSh7CiAgICB0aXRsZSwKICAgIGNvbnRleHQsCiAgICBhdXRob3IsCiAgICB0YWdzOiBuZXd0YWcsCiAgICBsb2NhdGlvbgogIH0pOwogIHZhciBhcnIgPSBbXTsKICB2YXIgYXJyID0gW2N0eC5yZXF1ZXN0LmZpbGVzLnBpYy5wYXRoLCBjdHgucmVxdWVzdC5maWxlcy5waWMyLnBhdGhdOwoKICBmb3IgKHZhciB2YWwgb2YgYXJyKSB7CiAgICB2YXIgcGFyYW0gPSB7CiAgICAgIEJ1Y2tldDogJ3JpZGFzcHJvZCcsCiAgICAgIEtleTogYGpvYmltYWdlLyR7aXRlbS5faWQgKyBNYXRoLnJhbmRvbSgpfWAsCiAgICAgIEFDTDogJ3B1YmxpYy1yZWFkJywKICAgICAgQm9keTogYXdhaXQgZnMuY3JlYXRlUmVhZFN0cmVhbSh2YWwpLAogICAgICBDb250ZW50VHlwZTogJ2ltYWdlL3BuZycKICAgIH07CiAgICBjb25zdCBsYWxhID0gYXdhaXQgdXBsb2FkKHBhcmFtKTsKICAgIGF3YWl0IGl0ZW0ucGljcy5wdXNoKGxhbGEuTG9jYXRpb24pOwogIH0KCiAgaXRlbS5zYXZlKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IHVwZGF0ZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgaWQKICB9ID0gY3R4LnBhcmFtczsKICBjb25zdCB7CiAgICBjb250ZXh0LAogICAgdGl0bGUsCiAgICB0YWdzLAogICAgbG9jYXRpb24KICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjb25zdCBuZXd0YWcgPSBKU09OLnBhcnNlKHRhZ3MpOwogIGNvbnN0IGF1dGhvciA9IGN0eC5zdGF0ZS51c2VyLl9pZDsKICBjb25zdCBwb3N0ID0gYXdhaXQgZGIuam9icy5maW5kT25lQW5kVXBkYXRlKHsKICAgIF9pZDogaWQKICB9LCB7CiAgICBjb250ZXh0OiBjb250ZXh0LAogICAgdGFnczogbmV3dGFnLAogICAgdGl0bGU6IHRpdGxlLAogICAgbG9jYXRpb246IGxvY2F0aW9uCiAgfSk7CiAgcG9zdC5zYXZlKCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IGZpbmRvbmUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgcG9zdCA9IGF3YWl0IGRiLmpvYnMuZmluZE9uZSh7CiAgICBfaWQ6IGlkCiAgfSk7CiAgdmlld0NvdW50KGlkKTsKICBjdHguc3RhdHVzID0gMjAwOwogIGN0eC5ib2R5ID0gcG9zdDsKfTsKCmNvbnN0IGxhdGVzdCA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgcG9zdHMgPSBhd2FpdCBkYi5qb2JzLmZpbmQoKS5zb3J0KHsKICAgIF9pZDogLTEKICB9KS5saW1pdCgyMCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKICBjdHguYm9keSA9IHBvc3RzOwp9OwoKY29uc3QgZGVsZXRlb25lID0gYXN5bmMgY3R4ID0+IHsKICBjb25zdCB7CiAgICBpZAogIH0gPSBjdHgucGFyYW1zOwogIGNvbnN0IHBvc3QgPSBhd2FpdCBkYi5qb2JzLmZpbmRPbmVBbmRSZW1vdmUoewogICAgX2lkOiBpZAogIH0pOwogIGN0eC5zdGF0dXMgPSAyMDA7Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgY3JlYXRlLAogIGRlbGV0ZW9uZSwKICB1cGRhdGUsCiAgZmluZG9uZSwKICBsYXRlc3QKfTs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/jobController.ts"],"names":["db","upload","fs","viewCount","id","viewUp","posts","findByIdAndUpdate","_id","$inc","views","save","create","ctx","title","context","tags","location","request","body","author","state","user","newtag","JSON","parse","item","jobs","arr","files","pic","path","pic2","val","param","Bucket","Key","Math","random","ACL","Body","createReadStream","ContentType","lala","pics","push","Location","status","update","params","post","findOneAndUpdate","findone","findOne","latest","find","sort","limit","deleteone","findOneAndRemove"],"mappings":"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","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst viewCount: Controller = async (id) => {\n  const viewUp = await db.posts.findByIdAndUpdate(\n    { _id: id },\n    { $inc: { views: +1 } }\n  );\n  await viewUp?.save();\n};\n\nconst create: Controller = async (ctx) => {\n  const { title, context, tags, location } = ctx.request.body;\n  const author = ctx.state.user._id;\n  const newtag = JSON.parse(tags);\n  const item = await db.jobs.create({\n    title,\n    context,\n    author,\n    tags: newtag,\n    location,\n  });\n  var arr = [];\n\n  var arr = [ctx.request.files.pic.path, ctx.request.files.pic2.path];\n  for (var val of arr) {\n    var param = {\n      Bucket: 'ridasprod',\n      Key: `jobimage/${item._id + Math.random()}`,\n      ACL: 'public-read',\n      Body: await fs.createReadStream(val),\n      ContentType: 'image/png',\n    };\n    const lala = await upload(param);\n    await (item as any).pics.push(lala.Location);\n  }\n\n  item.save();\n  ctx.status = 200;\n};\n\nconst update: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const { context, title, tags, location } = ctx.request.body;\n  const newtag = JSON.parse(tags);\n  const author = ctx.state.user._id;\n  const post = await db.jobs.findOneAndUpdate(\n    { _id: id },\n    {\n      context: context,\n      tags: newtag,\n      title: title,\n      location: location,\n    }\n  );\n  (post as any).save();\n  ctx.status = 200;\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.jobs.findOne({ _id: id });\n  viewCount(id);\n  ctx.status = 200;\n  ctx.body = post;\n};\n\nconst latest: Controller = async (ctx) => {\n  const posts = await db.jobs.find().sort({ _id: -1 }).limit(20);\n  ctx.status = 200;\n  ctx.body = posts;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.jobs.findOneAndRemove({ _id: id });\n  ctx.status = 200;\n};\n\nexport default { create, deleteone, update, findone, latest };\n"]}]}