{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","mtime":1611220037097},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKaW1wb3J0IHVwbG9hZCBmcm9tICcuLi91dGlscy9zMyc7CmltcG9ydCBmcyBmcm9tICdmcyc7Cgpjb25zdCB2aWV3Q291bnQgPSBhc3luYyBpZCA9PiB7CiAgY29uc3Qgdmlld1VwID0gYXdhaXQgZGIucG9zdHMuZmluZEJ5SWRBbmRVcGRhdGUoewogICAgX2lkOiBpZAogIH0sIHsKICAgICRpbmM6IHsKICAgICAgdmlld3M6ICsxCiAgICB9CiAgfSk7CiAgYXdhaXQgdmlld1VwPy5zYXZlKCk7Cn07Cgpjb25zdCBjcmVhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIHRhZ3MKICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjb25zdCBhdXRob3IgPSBjdHguc3RhdGUudXNlci5faWQ7CiAgY29uc3QgbmV3dGFnID0gSlNPTi5wYXJzZSh0YWdzKTsKICBjb25zdCBpdGVtID0gYXdhaXQgZGIucG9zdHMuY3JlYXRlKHsKICAgIHRpdGxlLAogICAgY29udGV4dCwKICAgIGF1dGhvciwKICAgIHRhZ3M6IG5ld3RhZwogIH0pOwogIGNvbnNvbGUubG9nKGN0eC5yZXF1ZXN0LmZpbGVzKTsKICBjb25zdCB7CiAgICBwYXRoCiAgfSA9IGN0eC5yZXF1ZXN0LmZpbGVzLnBpYzsKICBjb25zdCB7CiAgICBwYXRoMgogIH0gPSBjdHgucmVxdWVzdC5maWxlcy5waWMyOwogIGNvbnN0IGJvZHkgPSBmcy5jcmVhdGVSZWFkU3RyZWFtKHBhdGgpOwogIGNvbnN0IHBhcmFtID0gewogICAgQnVja2V0OiBwcm9jZXNzLmVudi5wanRfbmFtZSwKICAgIEtleTogYGltYWdlLyR7aXRlbS5faWR9YCwKICAgIEFDTDogJ3B1YmxpYy1yZWFkJywKICAgIEJvZHk6IGJvZHksCiAgICBDb250ZW50VHlwZTogJ2ltYWdlL3BuZycKICB9OwogIGNvbnN0IHVwID0gYXdhaXQgdXBsb2FkKHBhcmFtKTsKICBpdGVtLnBpYyA9IHVwLkxvY2F0aW9uOwogIGl0ZW0uc2F2ZSgpOwogIGN0eC5zdGF0dXMgPSAyMDA7Cn07Cgpjb25zdCB1cGRhdGUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgewogICAgY29udGV4dCwKICAgIHRpdGxlLAogICAgdGFncwogIH0gPSBjdHgucmVxdWVzdC5ib2R5OwogIGNvbnN0IG5ld3RhZyA9IEpTT04ucGFyc2UodGFncyk7CiAgY29uc3QgYXV0aG9yID0gY3R4LnN0YXRlLnVzZXIuX2lkOwogIGNvbnN0IHBvc3QgPSBhd2FpdCBkYi5wb3N0cy5maW5kT25lQW5kVXBkYXRlKHsKICAgIF9pZDogaWQKICB9LCB7CiAgICBjb250ZXh0OiBjb250ZXh0LAogICAgdGFnczogbmV3dGFnLAogICAgdGl0bGU6IHRpdGxlCiAgfSk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKfTsKCmNvbnN0IGZpbmRvbmUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgcG9zdCA9IGF3YWl0IGRiLnBvc3RzLmZpbmRPbmUoewogICAgX2lkOiBpZAogIH0pOwogIHZpZXdDb3VudChpZCk7CiAgY3R4LnN0YXR1cyA9IDIwMDsKICBjdHguYm9keSA9IHBvc3Q7Cn07Cgpjb25zdCBsYXRlc3QgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHBvc3RzID0gYXdhaXQgZGIucG9zdHMuZmluZCgpLnNvcnQoewogICAgX2lkOiAtMQogIH0pLmxpbWl0KDIwKTsKICBjdHguc3RhdHVzID0gMjAwOwogIGN0eC5ib2R5ID0gcG9zdHM7Cn07Cgpjb25zdCBkZWxldGVvbmUgPSBhc3luYyBjdHggPT4gewogIGNvbnN0IHsKICAgIGlkCiAgfSA9IGN0eC5wYXJhbXM7CiAgY29uc3QgcG9zdCA9IGF3YWl0IGRiLnBvc3RzLmZpbmRPbmVBbmRSZW1vdmUoewogICAgX2lkOiBpZAogIH0pOwogIGN0eC5zdGF0dXMgPSAyMDA7Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgY3JlYXRlLAogIGRlbGV0ZW9uZSwKICB1cGRhdGUsCiAgZmluZG9uZSwKICBsYXRlc3QKfTs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts"],"names":["db","upload","fs","viewCount","id","viewUp","posts","findByIdAndUpdate","_id","$inc","views","save","create","ctx","title","context","tags","request","body","author","state","user","newtag","JSON","parse","item","console","log","files","path","pic","path2","pic2","createReadStream","param","Bucket","process","env","pjt_name","Key","ACL","Body","ContentType","up","Location","status","update","params","post","findOneAndUpdate","findone","findOne","latest","find","sort","limit","deleteone","findOneAndRemove"],"mappings":"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","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\nimport upload from '../utils/s3';\nimport fs from 'fs';\n\nconst viewCount: Controller = async (id) => {\n  const viewUp = await db.posts.findByIdAndUpdate(\n    { _id: id },\n    { $inc: { views: +1 } }\n  );\n  await viewUp?.save();\n};\n\nconst create: Controller = async (ctx) => {\n  const { title, context, tags } = ctx.request.body;\n  const author = ctx.state.user._id;\n  const newtag = JSON.parse(tags);\n  const item = await db.posts.create({\n    title,\n    context,\n    author,\n    tags: newtag,\n  });\n  console.log(ctx.request.files);\n  const { path } = ctx.request.files.pic;\n  const { path2 } = ctx.request.files.pic2;\n  const body = fs.createReadStream(path);\n  const param = {\n    Bucket: process.env.pjt_name,\n    Key: `image/${item._id}`,\n    ACL: 'public-read',\n    Body: body,\n    ContentType: 'image/png',\n  };\n  const up = await upload(param);\n  (item as any).pic = up.Location;\n  item.save();\n  ctx.status = 200;\n};\n\nconst update: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const { context, title, tags } = ctx.request.body;\n  const newtag = JSON.parse(tags);\n  const author = ctx.state.user._id;\n  const post = await db.posts.findOneAndUpdate(\n    { _id: id },\n    { context: context, tags: newtag, title: title }\n  );\n  ctx.status = 200;\n};\n\nconst findone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.posts.findOne({ _id: id });\n  viewCount(id);\n  ctx.status = 200;\n  ctx.body = post;\n};\n\nconst latest: Controller = async (ctx) => {\n  const posts = await db.posts.find().sort({ _id: -1 }).limit(20);\n  ctx.status = 200;\n  ctx.body = posts;\n};\n\nconst deleteone: Controller = async (ctx) => {\n  const { id } = ctx.params;\n  const post = await db.posts.findOneAndRemove({ _id: id });\n  ctx.status = 200;\n};\n\nexport default { create, deleteone, update, findone, latest };\n"]}]}