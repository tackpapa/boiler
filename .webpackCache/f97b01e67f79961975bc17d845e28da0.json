{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts","mtime":1610905562836},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ2RiJzsKCmNvbnN0IGNyZWF0ZSA9IGFzeW5jIGN0eCA9PiB7CiAgY29uc3QgewogICAgY29udGV4dCwKICAgIHBpYywKICAgIGF1dGhvciwKICAgIHRhZ3MKICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjb25zdCBtYW4gPSBhd2FpdCBkYi5wb3N0cy5maW5kT25lKHsKICAgIGNvbnRleHQ6IGNvbnRleHQsCiAgICBwaWM6IHBpYywKICAgIGF1dGhvcjogYXV0aG9yCiAgfSkuZXhlYygpOwoKICBpZiAobWFuKSB7CiAgICBjdHguc3RhdHVzID0gNDAzOwogIH0gZWxzZSB7CiAgICBjb25zdCBpdGVtID0gYXdhaXQgZGIucG9zdHMuY3JlYXRlKHsKICAgICAgY29udGV4dCwKICAgICAgcGljLAogICAgICBhdXRob3IKICAgIH0pOwogICAgY29uc3QgaWQgPSBpdGVtLl9pZDsKICAgIGNvbnNvbGUubG9nKGlkLCAn7JWE7J2065SUJyk7CiAgICBjb25zdCBwdXQgPSB0YWdzLmZvckVhY2goYXN5bmMgZnVuY3Rpb24gKGUpIHsKICAgICAgYXdhaXQgZGIucG9zdHMudXBkYXRlT25lKHsKICAgICAgICBfaWQ6IGlkCiAgICAgIH0sIHsKICAgICAgICAkcHVzaDogewogICAgICAgICAgdGFnczogZQogICAgICAgIH0KICAgICAgfSkuc2F2ZSgpOwogICAgfSk7CiAgICBjdHguc3RhdHVzID0gMjAwOwogIH0KfTsKCmNvbnN0IHVwZGF0ZSA9IGN0eCA9PiB7CiAgLy8gICBjb25zdCB7IGVtYWlsLCBwYXNzd29yZCB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBjdHguYm9keSA9ICdoZWxsbyB3b3JsZCc7Cn07Cgpjb25zdCBmaW5kb25lID0gY3R4ID0+IHsKICBjb25zdCB7CiAgICBlbWFpbCwKICAgIHBhc3N3b3JkCiAgfSA9IGN0eC5yZXF1ZXN0LmJvZHk7CiAgZGIudXNlcnMuY3JlYXRlKHsKICAgIGVtYWlsLAogICAgcGFzc3dvcmQKICB9KTsKICBjdHguYm9keSA9ICdoZWxsbyB3b3JsZCc7Cn07Cgpjb25zdCBmaW5kYWxsID0gY3R4ID0+IHsKICBjb25zdCB7CiAgICBlbWFpbCwKICAgIHBhc3N3b3JkCiAgfSA9IGN0eC5yZXF1ZXN0LmJvZHk7CiAgZGIudXNlcnMuY3JlYXRlKHsKICAgIGVtYWlsLAogICAgcGFzc3dvcmQKICB9KTsKICBjdHguYm9keSA9ICdoZWxsbyB3b3JsZCc7Cn07Cgpjb25zdCBkZWxldGVvbmUgPSBjdHggPT4gewogIGNvbnN0IHsKICAgIGVtYWlsLAogICAgcGFzc3dvcmQKICB9ID0gY3R4LnJlcXVlc3QuYm9keTsKICBkYi51c2Vycy5jcmVhdGUoewogICAgZW1haWwsCiAgICBwYXNzd29yZAogIH0pOwogIGN0eC5ib2R5ID0gJ2hlbGxvIHdvcmxkJzsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjcmVhdGUsCiAgZGVsZXRlb25lLAogIHVwZGF0ZSwKICBmaW5kb25lLAogIGZpbmRhbGwKfTs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/controllers/postController.ts"],"names":["db","create","ctx","context","pic","author","tags","request","body","man","posts","findOne","exec","status","item","id","_id","console","log","put","forEach","e","updateOne","$push","save","update","findone","email","password","users","findall","deleteone"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;;AAGA,MAAMC,MAAkB,GAAG,MAAOC,GAAP,IAAe;AACxC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAiCJ,GAAG,CAACK,OAAJ,CAAYC,IAAnD;AACA,QAAMC,GAAG,GAAG,MAAMT,EAAE,CAACU,KAAH,CACfC,OADe,CACP;AAAER,IAAAA,OAAO,EAAEA,OAAX;AAAoBC,IAAAA,GAAG,EAAEA,GAAzB;AAA8BC,IAAAA,MAAM,EAAEA;AAAtC,GADO,EAEfO,IAFe,EAAlB;;AAGA,MAAIH,GAAJ,EAAS;AACPP,IAAAA,GAAG,CAACW,MAAJ,GAAa,GAAb;AACD,GAFD,MAEO;AACL,UAAMC,IAAI,GAAG,MAAMd,EAAE,CAACU,KAAH,CAAST,MAAT,CAAgB;AACjCE,MAAAA,OADiC;AAEjCC,MAAAA,GAFiC;AAGjCC,MAAAA;AAHiC,KAAhB,CAAnB;AAKA,UAAMU,EAAE,GAAGD,IAAI,CAACE,GAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgB,KAAhB;AACA,UAAMI,GAAG,GAAGb,IAAI,CAACc,OAAL,CAAa,gBAAgBC,CAAhB,EAA2B;AAClD,YAAMrB,EAAE,CAACU,KAAH,CAASY,SAAT,CAAmB;AAAEN,QAAAA,GAAG,EAAED;AAAP,OAAnB,EAAgC;AAAEQ,QAAAA,KAAK,EAAE;AAAEjB,UAAAA,IAAI,EAAEe;AAAR;AAAT,OAAhC,EAAwDG,IAAxD,EAAN;AACD,KAFW,CAAZ;AAIAtB,IAAAA,GAAG,CAACW,MAAJ,GAAa,GAAb;AACD;AACF,CArBD;;AAuBA,MAAMY,MAAkB,GAAIvB,GAAD,IAAS;AAClC;AAEAA,EAAAA,GAAG,CAACM,IAAJ,GAAW,aAAX;AACD,CAJD;;AAMA,MAAMkB,OAAmB,GAAIxB,GAAD,IAAS;AACnC,QAAM;AAAEyB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsB1B,GAAG,CAACK,OAAJ,CAAYC,IAAxC;AACAR,EAAAA,EAAE,CAAC6B,KAAH,CAAS5B,MAAT,CAAgB;AACd0B,IAAAA,KADc;AAEdC,IAAAA;AAFc,GAAhB;AAKA1B,EAAAA,GAAG,CAACM,IAAJ,GAAW,aAAX;AACD,CARD;;AAUA,MAAMsB,OAAmB,GAAI5B,GAAD,IAAS;AACnC,QAAM;AAAEyB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsB1B,GAAG,CAACK,OAAJ,CAAYC,IAAxC;AACAR,EAAAA,EAAE,CAAC6B,KAAH,CAAS5B,MAAT,CAAgB;AACd0B,IAAAA,KADc;AAEdC,IAAAA;AAFc,GAAhB;AAKA1B,EAAAA,GAAG,CAACM,IAAJ,GAAW,aAAX;AACD,CARD;;AAUA,MAAMuB,SAAqB,GAAI7B,GAAD,IAAS;AACrC,QAAM;AAAEyB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsB1B,GAAG,CAACK,OAAJ,CAAYC,IAAxC;AACAR,EAAAA,EAAE,CAAC6B,KAAH,CAAS5B,MAAT,CAAgB;AACd0B,IAAAA,KADc;AAEdC,IAAAA;AAFc,GAAhB;AAKA1B,EAAAA,GAAG,CAACM,IAAJ,GAAW,aAAX;AACD,CARD;;AAUA,eAAe;AAAEP,EAAAA,MAAF;AAAU8B,EAAAA,SAAV;AAAqBN,EAAAA,MAArB;AAA6BC,EAAAA,OAA7B;AAAsCI,EAAAA;AAAtC,CAAf","sourcesContent":["import db from 'db';\nimport { Controller } from './types';\n\nconst create: Controller = async (ctx) => {\n  const { context, pic, author, tags } = ctx.request.body;\n  const man = await db.posts\n    .findOne({ context: context, pic: pic, author: author })\n    .exec();\n  if (man) {\n    ctx.status = 403;\n  } else {\n    const item = await db.posts.create({\n      context,\n      pic,\n      author,\n    });\n    const id = item._id;\n    console.log(id, '아이디');\n    const put = tags.forEach(async function (e: String) {\n      await db.posts.updateOne({ _id: id }, { $push: { tags: e } }).save();\n    });\n\n    ctx.status = 200;\n  }\n};\n\nconst update: Controller = (ctx) => {\n  //   const { email, password } = ctx.request.body;\n\n  ctx.body = 'hello world';\n};\n\nconst findone: Controller = (ctx) => {\n  const { email, password } = ctx.request.body;\n  db.users.create({\n    email,\n    password,\n  });\n\n  ctx.body = 'hello world';\n};\n\nconst findall: Controller = (ctx) => {\n  const { email, password } = ctx.request.body;\n  db.users.create({\n    email,\n    password,\n  });\n\n  ctx.body = 'hello world';\n};\n\nconst deleteone: Controller = (ctx) => {\n  const { email, password } = ctx.request.body;\n  db.users.create({\n    email,\n    password,\n  });\n\n  ctx.body = 'hello world';\n};\n\nexport default { create, deleteone, update, findone, findall };\n"]}]}