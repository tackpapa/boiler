{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/models/jobs.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/models/jobs.ts","mtime":1611320595976},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJzsKY29uc3QgSm9iU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7CiAgdGl0bGU6IFN0cmluZywKICBhdXRob3I6IHsKICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCwKICAgIHJlZjogJ1VzZXJzJwogIH0sCiAgY29udGV4dDogU3RyaW5nLAogIHBpY3M6IHsKICAgIHR5cGU6IFtTdHJpbmddLAogICAgZGVmYXVsdDogW10KICB9LAogIHRhZ3M6IHsKICAgIHR5cGU6IFtTdHJpbmddLAogICAgZGVmYXVsdDogW10KICB9LAogIGxvY2F0aW9uOiBTdHJpbmcsCiAgdmlld3M6IE51bWJlcgp9LCB7CiAgdGltZXN0YW1wczogdHJ1ZQp9KTsKCkpvYlNjaGVtYS5tZXRob2RzLnZpZXdVcCA9IGFzeW5jIGZ1bmN0aW9uICgpIHsKICB0aGlzLnZpZXdzICs9IDE7CiAgdGhpcy5zYXZlKCk7Cn07Cgpjb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdKb2JzJywgSm9iU2NoZW1hKTsKZXhwb3J0IGRlZmF1bHQgbW9kZWw7"},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/models/jobs.ts"],"names":["mongoose","JobSchema","Schema","title","String","author","type","Types","ObjectId","ref","context","pics","default","tags","location","views","Number","timestamps","methods","viewUp","save","model"],"mappings":"AAAA,OAAOA,QAAP,MAAkD,UAAlD;AAkBA,MAAMC,SAA8B,GAAG,IAAID,QAAQ,CAACE,MAAb,CACrC;AACEC,EAAAA,KAAK,EAAEC,MADT;AAEEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAEN,QAAQ,CAACE,MAAT,CAAgBK,KAAhB,CAAsBC,QADtB;AAENC,IAAAA,GAAG,EAAE;AAFC,GAFV;AAMEC,EAAAA,OAAO,EAAEN,MANX;AAOEO,EAAAA,IAAI,EAAE;AACJL,IAAAA,IAAI,EAAE,CAACF,MAAD,CADF;AAEJQ,IAAAA,OAAO,EAAE;AAFL,GAPR;AAWEC,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAE,CAACF,MAAD,CADF;AAEJQ,IAAAA,OAAO,EAAE;AAFL,GAXR;AAeEE,EAAAA,QAAQ,EAAEV,MAfZ;AAgBEW,EAAAA,KAAK,EAAEC;AAhBT,CADqC,EAmBrC;AACEC,EAAAA,UAAU,EAAE;AADd,CAnBqC,CAAvC;;AAuBAhB,SAAS,CAACiB,OAAV,CAAkBC,MAAlB,GAA2B,kBAAkB;AAC3C,OAAKJ,KAAL,IAAc,CAAd;AACA,OAAKK,IAAL;AACD,CAHD;;AAIA,MAAMC,KAAK,GAAGrB,QAAQ,CAACqB,KAAT,CAAsC,MAAtC,EAA8CpB,SAA9C,CAAd;AAEA,eAAeoB,KAAf","sourcesContent":["import mongoose, { Schema, Document, Model } from 'mongoose';\n\nexport interface Job {\n  title: string;\n  author: string;\n  context: string;\n  pics: string[];\n  tags: string[];\n  views: number;\n  location: number;\n}\n\nexport interface JobDocument extends Job, Document {\n  //method를 넣는다\n  viewUp: () => void;\n}\nexport interface JobModel extends Model<JobDocument> {}\n\nconst JobSchema: Schema<JobDocument> = new mongoose.Schema(\n  {\n    title: String,\n    author: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'Users',\n    },\n    context: String,\n    pics: {\n      type: [String],\n      default: [],\n    },\n    tags: {\n      type: [String],\n      default: [],\n    },\n    location: String,\n    views: Number,\n  },\n  {\n    timestamps: true,\n  }\n);\nJobSchema.methods.viewUp = async function () {\n  this.views += 1;\n  this.save();\n};\nconst model = mongoose.model<JobDocument, JobModel>('Jobs', JobSchema);\n\nexport default model;\n"]}]}