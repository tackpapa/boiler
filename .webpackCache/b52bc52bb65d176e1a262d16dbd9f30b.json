{"remainingRequest":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/Users/kiyoungtack/Desktop/boiler/src/models/users.ts","dependencies":[{"path":"/Users/kiyoungtack/Desktop/boiler/src/models/users.ts","mtime":1611672137092},{"path":"/Users/kiyoungtack/Desktop/boiler/.babelrc","mtime":1610697389559},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kiyoungtack/Desktop/boiler/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJzsKY29uc3QgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoewogIGVtYWlsOiB7CiAgICB0eXBlOiBTdHJpbmcsCiAgICBsb3dlcmNhc2U6IHRydWUsCiAgICB1bmlxdWU6IHRydWUsCiAgICByZXF1aXJlZDogW3RydWUsICJjYW4ndCBiZSBibGFuayJdLAogICAgaW5kZXg6IHRydWUKICB9LAogIG5hbWU6IHsKICAgIHR5cGU6IFN0cmluZywKICAgIHJlcXVpcmVkOiBbdHJ1ZSwgImNhbid0IGJlIGJsYW5rIl0KICB9LAogIG1lbW86IHsKICAgIHR5cGU6IFN0cmluZywKICAgIGRlZmF1bHQ6ICfsnKDsoIDtirnsnbTsgqztla0nCiAgfSwKICBleHA6IE51bWJlciwKICBwYXNzd29yZDogU3RyaW5nLAogIGNlbGw6IE51bWJlciwKICBrYWthb2lkOiBTdHJpbmcsCiAgYWNjZXNzVG9rZW46IFN0cmluZywKICBwcm9maWxlcGljOiBTdHJpbmcsCiAgbGV2ZWw6IHsKICAgIHR5cGU6IE51bWJlciwKICAgIGRlZmF1bHQ6IDEKICB9Cn0sIHsKICB0aW1lc3RhbXBzOiB0cnVlCn0pOwpjb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKCdVc2VycycsIFVzZXJTY2hlbWEpOwpleHBvcnQgZGVmYXVsdCBtb2RlbDs="},{"version":3,"sources":["/Users/kiyoungtack/Desktop/boiler/src/models/users.ts"],"names":["mongoose","UserSchema","Schema","email","type","String","lowercase","unique","required","index","name","memo","default","exp","Number","password","cell","kakaoid","accessToken","profilepic","level","timestamps","model"],"mappings":"AAAA,OAAOA,QAAP,MAAiC,UAAjC;AAEA,MAAMC,UAAkB,GAAG,IAAID,QAAQ,CAACE,MAAb,CACzB;AACEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,SAAS,EAAE,IAFN;AAGLC,IAAAA,MAAM,EAAE,IAHH;AAILC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gBAAP,CAJL;AAKLC,IAAAA,KAAK,EAAE;AALF,GADT;AAQEC,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAEC,MADF;AAEJG,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gBAAP;AAFN,GARR;AAYEG,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAEC,MADF;AAEJO,IAAAA,OAAO,EAAE;AAFL,GAZR;AAgBEC,EAAAA,GAAG,EAAEC,MAhBP;AAiBEC,EAAAA,QAAQ,EAAEV,MAjBZ;AAkBEW,EAAAA,IAAI,EAAEF,MAlBR;AAmBEG,EAAAA,OAAO,EAAEZ,MAnBX;AAoBEa,EAAAA,WAAW,EAAEb,MApBf;AAqBEc,EAAAA,UAAU,EAAEd,MArBd;AAsBEe,EAAAA,KAAK,EAAE;AACLhB,IAAAA,IAAI,EAAEU,MADD;AAELF,IAAAA,OAAO,EAAE;AAFJ;AAtBT,CADyB,EA4BzB;AACES,EAAAA,UAAU,EAAE;AADd,CA5ByB,CAA3B;AAiCA,MAAMC,KAAK,GAAGtB,QAAQ,CAACsB,KAAT,CAAe,OAAf,EAAwBrB,UAAxB,CAAd;AAEA,eAAeqB,KAAf","sourcesContent":["import mongoose, { Schema } from 'mongoose';\n\nconst UserSchema: Schema = new mongoose.Schema(\n  {\n    email: {\n      type: String,\n      lowercase: true,\n      unique: true,\n      required: [true, \"can't be blank\"],\n      index: true,\n    },\n    name: {\n      type: String,\n      required: [true, \"can't be blank\"],\n    },\n    memo: {\n      type: String,\n      default: '유저특이사항',\n    },\n    exp: Number,\n    password: String,\n    cell: Number,\n    kakaoid: String,\n    accessToken: String,\n    profilepic: String,\n    level: {\n      type: Number,\n      default: 1,\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst model = mongoose.model('Users', UserSchema);\n\nexport default model;\n"]}]}